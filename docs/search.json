[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Miguel Angel Garcia-Campos. Author, maintainer.            https://angelcampos.github.io/","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Garcia-Campos M (2024). txtools: R package facilitating analysis RNA modifications, structures, interactions. R package version 1.0.2.","code":"@Manual{,   title = {txtools: An R package facilitating analysis of RNA modifications, structures, and interactions},   author = {Miguel Angel Garcia-Campos},   year = {2024},   note = {R package version 1.0.2}, }"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Miguel Angel Garcia Campos Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"An R package facilitating analysis of RNA modifications, structures, and interactions","text":"txtools package processes RNA-seq reads alignments transcriptomic-oriented tables. Enabling quick simplified analysis, closely inspect summarized RNA-seq data per transcript, nucleotide resolution, .e. coverage, read-starts, read-ends, deletions, nucleotide frequency. Attractive plotting also readily available visualize data. main processing pipeline txtools consists 1) converting genomic alignments transcriptomic space merging paired-end reads using tx_reads() 2) summarize counts ‘readouts’ (coverage, read-start, read-ends, nucleotide frequency, deletions) along transcriptome using function tx_makeDT_ family. Figure 1. txtools’ main processing pipeline note, coverage calculation paired-end reads using txtools considers whole range paired alignment. start read1 end read2, including insert directly sequenced (Figure 2) Figure 2. Paired-end reads coverage computation","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package facilitating analysis of RNA modifications, structures, and interactions","text":"can install development version GitHub typing following commands R console:","code":"if (!requireNamespace(\"remotes\", quietly = TRUE))     install.packages(\"remotes\") remotes::install_github(\"AngelCampos/txtools\", build_vignettes = TRUE)"},{"path":"/index.html","id":"quick-example","dir":"","previous_headings":"","what":"Quick example","title":"An R package facilitating analysis of RNA modifications, structures, and interactions","text":"small example use ‘Pasilla’ experiment data (package) contains BAM file paired-end alignments D. melanogaster RNA-seq experiment chromosome 4, along FASTA file comprising genome sequence chromosome. Using txtools can load genome (FASTA), gene annotation (BED-12), RNA-seq reads alignment (BAM) files R ease. First, process alignments transcriptomic versions using tx_reads() function. just need summarize alignments txDT. case using tx_makeDT_covNucFreq() function outputs table base metrics, including read coverage (‘cov’ column), nucleotide frequency (,C,T,G columns). resulting txDT comprise summarized information RNA-seq reads aligned genome contained within genes gene annotation (example consists top 10 expressed genes). information columns DT consult tx_makeDT_covNucFreq() documentation. extend base metrics tx_makeDT_*() functions provide txtools provides tx_add_*() functions family. One example functions tx_add_diffNucToRefRatio() calculates ratio nucleotide counts different reference sequence. Using metric can easily spot locations RNA transcripts sequence different reference sequence. Finally, using tx_plot_nucFreq() function can visualize data DT specific location.","code":"# Load packages library(txtools) library(pasillaBamSubset)  # Getting paths to files BED_file <- tx_dm3_geneAnnot() FASTA_file <- pasillaBamSubset::dm3_chr4() # Data from pasillaBamSubset pkg PE_BAM_file <- pasillaBamSubset::untreated3_chr4() # Data from pasillaBamSubset pkg  # Loading D. melanogaster gene annotation, genome, and paired-end bam alignments dm3_geneAnnot <- tx_load_bed(BED_file) dm3_genome <- tx_load_genome(FASTA_file) dm3_PEreads <- tx_load_bam(file = PE_BAM_file, pairedEnd = TRUE, loadSeq = TRUE) reads_SE <- tx_reads(reads = dm3_PEreads,                       geneAnnot = dm3_geneAnnot,                       withSeq = TRUE,                       nCores = 1,                       minReads = 1) #> Warning in rmAmbigStrandAligns(reads): Removing 63 alignments with ambiguous strand (*) #> Processing 75346 reads, using 10 gene models.  #> 10373 alignments overlap 10 gene models  #> Assigning alignments to gene model...  #> Processing sequences. This may take several minutes depending on geneAnnot size ...  #> Output contains: 7176 unique alignments in 10 gene models #> Warning in tx_reads(reads = dm3_PEreads, geneAnnot = dm3_geneAnnot, withSeq = #> TRUE, : Some alignments were not assigned to any gene, you can retrieve them #> using the tx_get_unassignedAlignments() function. DT <- tx_makeDT_covNucFreq(reads_SE, geneAnnot = dm3_geneAnnot, genome = dm3_genome) DT <- tx_add_misincRate(DT, addCounts = TRUE) DT[which(misincRate > 0.5 & nucTotal > 40),] #>     chr gencoor strand      gene txcoor refSeq cov start_5p end_3p A C  G T N - #> 1: chr4  939355      - NM_079901   3803      A  90        0      0 0 0 46 0 0 0 #>     . misincCount nucTotal misincRate #> 1: 44          46       46          1 tx_plot_nucFreq(DT, gene = \"NM_079901\", txRange = window_around(3803, 15))"},{"path":"/index.html","id":"further-documentation","dir":"","previous_headings":"","what":"Further documentation","title":"An R package facilitating analysis of RNA modifications, structures, and interactions","text":"txtools user guide available vignette typing vignette(\"txtools\") R console. use cases code available repo : https://github.com/AngelCampos/txtools_uc.","code":""},{"path":"/index.html","id":"current-limitations","dir":"","previous_headings":"","what":"Current limitations:","title":"An R package facilitating analysis of RNA modifications, structures, and interactions","text":"Insertions: txtools able deal insertions. mainly insertions part original trasncriptomic genomic reference space alter length gene model. added feature future versions priority. Potentially long processing times: Loading big BAM files R commonly requires lot time, mind txtools provides progress bar keep users informed loading status. importantly, depending ammount loaded reads size Gene Annotation tx_reads() processing time can take several minutes. solution issue use multi-threadding incorporated tx_reads() functions, functionality available UNIX MAC OS.","code":""},{"path":"/index.html","id":"additional-notes","dir":"","previous_headings":"","what":"Additional notes:","title":"An R package facilitating analysis of RNA modifications, structures, and interactions","text":"many R packages meant high-throughput data analysis manipulation, using txtools may require high ammounts RAM memory, depending mainly size BAM files processed.","code":""},{"path":"/reference/hid_aggregate_DTlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge lists of data.tables — hid_aggregate_DTlist","title":"Merge lists of data.tables — hid_aggregate_DTlist","text":"Merge lists data.tables","code":""},{"path":"/reference/hid_aggregate_DTlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge lists of data.tables — hid_aggregate_DTlist","text":"","code":"hid_aggregate_DTlist(DTL1, DTL2, colsToAdd, keepAll = TRUE)"},{"path":"/reference/hid_aggregate_DTlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge lists of data.tables — hid_aggregate_DTlist","text":"DTL1 list List data.table gene names. output tx_coverageDT, tx_nucFreqDT, tx_covNucFreqDT functions. DTL2 list List data.table gene names. colsToAdd character. Numeric column(s) aggregated (added). keepAll logical. Set FALSE just keeping data.tables name's DTL.","code":""},{"path":"/reference/hid_aggregate_DTlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge lists of data.tables — hid_aggregate_DTlist","text":"list","code":""},{"path":"/reference/hlp_coverageTab_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate coverage table (coverage, ends, starts) for all gene models\r\nwithout gene coordinates (Multicore) — hlp_coverageTab_mc","title":"Calculate coverage table (coverage, ends, starts) for all gene models\r\nwithout gene coordinates (Multicore) — hlp_coverageTab_mc","text":"Calculate coverage table (coverage, ends, starts) gene models without gene coordinates (Multicore)","code":""},{"path":"/reference/hlp_coverageTab_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate coverage table (coverage, ends, starts) for all gene models\r\nwithout gene coordinates (Multicore) — hlp_coverageTab_mc","text":"","code":"hlp_coverageTab_mc(x, nCores)"},{"path":"/reference/hlp_coverageTab_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate coverage table (coverage, ends, starts) for all gene models\r\nwithout gene coordinates (Multicore) — hlp_coverageTab_mc","text":"x CompressedGRangesList. Genomic Ranges list containing genomic alignments data gene. Constructed via tx_reads(). nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/hlp_coverageTab_mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate coverage table (coverage, ends, starts) for all gene models\r\nwithout gene coordinates (Multicore) — hlp_coverageTab_mc","text":"data.table","code":""},{"path":"/reference/hlp_coverageTab_mc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate coverage table (coverage, ends, starts) for all gene models\r\nwithout gene coordinates (Multicore) — hlp_coverageTab_mc","text":"M.. Garcia-Campos","code":""},{"path":"/reference/hlp_genCoorTab_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate system table generator — hlp_genCoorTab_mc","title":"Coordinate system table generator — hlp_genCoorTab_mc","text":"Generates table genomic transcriptomic coordinates","code":""},{"path":"/reference/hlp_genCoorTab_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate system table generator — hlp_genCoorTab_mc","text":"","code":"hlp_genCoorTab_mc(x, geneAnnot, nCores)"},{"path":"/reference/hlp_genCoorTab_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate system table generator — hlp_genCoorTab_mc","text":"x CompressedGRangesList. Genomic Ranges list containing genomic alignments data gene. Constructed via tx_reads(). geneAnnot GRanges. Gene annotation loaded tx_load_bed(). nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/hlp_genCoorTab_mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate system table generator — hlp_genCoorTab_mc","text":"data.table","code":""},{"path":"/reference/hlp_nucFreqTab_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate nucleotide frequency pileup for all gene models — hlp_nucFreqTab_mc","title":"Calculate nucleotide frequency pileup for all gene models — hlp_nucFreqTab_mc","text":"Calculate nucleotide frequency pileup gene models","code":""},{"path":"/reference/hlp_nucFreqTab_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate nucleotide frequency pileup for all gene models — hlp_nucFreqTab_mc","text":"","code":"hlp_nucFreqTab_mc(x, simplify_IUPAC = \"not\", nCores)"},{"path":"/reference/hlp_nucFreqTab_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate nucleotide frequency pileup for all gene models — hlp_nucFreqTab_mc","text":"x CompressedGRangesList. Genomic Ranges list containing genomic alignments data gene. Constructed via tx_reads(). simplify_IUPAC character. Method simplify ambiguous reads: '': Ambiguous reads left IUPAC_ambiguous code, e.g. positions 'G' '' read 'R' note . \"splitHalf': Ambiguous reads divided half, odd cases fractions reads assigned. \"splitForceInt\": Ambiguous reads divided half, forced integers, unassigned fraction reads summed assigned 'N'. nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/hlp_nucFreqTab_mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate nucleotide frequency pileup for all gene models — hlp_nucFreqTab_mc","text":"data.table","code":""},{"path":"/reference/IUPAC_code_2nucs.html","id":null,"dir":"Reference","previous_headings":"","what":"IUPAC ambiguity alphabet (2nc) — IUPAC_code_2nucs","title":"IUPAC ambiguity alphabet (2nc) — IUPAC_code_2nucs","text":"IUPAC nucleotide ambiguity alphabet combinations two nucleotides, use mostly txtools functions generate datatables nucleotide frequency","code":""},{"path":"/reference/IUPAC_code_2nucs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IUPAC ambiguity alphabet (2nc) — IUPAC_code_2nucs","text":"","code":"IUPAC_code_2nucs"},{"path":"/reference/IUPAC_code_2nucs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IUPAC ambiguity alphabet (2nc) — IUPAC_code_2nucs","text":"Character vector","code":""},{"path":"/reference/IUPAC_CODE_MAP_extended.html","id":null,"dir":"Reference","previous_headings":"","what":"IUPAC code extended to consider deletions — IUPAC_CODE_MAP_extended","title":"IUPAC code extended to consider deletions — IUPAC_CODE_MAP_extended","text":"IUPAC_CODE_MAP_extended named character vector contains mapping IUPAC nucleotide ambiguity codes meaning adding deletion code \"-\", required computing consensus strings overlapping reads.","code":""},{"path":"/reference/IUPAC_CODE_MAP_extended.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IUPAC code extended to consider deletions — IUPAC_CODE_MAP_extended","text":"","code":"IUPAC_CODE_MAP_extended"},{"path":"/reference/IUPAC_CODE_MAP_extended.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IUPAC code extended to consider deletions — IUPAC_CODE_MAP_extended","text":"Named character vector","code":""},{"path":"/reference/IUPAC_CODE_MAP_extended.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"IUPAC code extended to consider deletions — IUPAC_CODE_MAP_extended","text":"Adapted Biostrings object IUPAC_CODE_MAP","code":""},{"path":"/reference/IUPAC_code_simpl.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplified nucleotide alphabet — IUPAC_code_simpl","title":"Simplified nucleotide alphabet — IUPAC_code_simpl","text":"Simplified nucleotide alphabet use mostly txtools functions generate datatables nucleotide frequency","code":""},{"path":"/reference/IUPAC_code_simpl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplified nucleotide alphabet — IUPAC_code_simpl","text":"","code":"IUPAC_code_simpl"},{"path":"/reference/IUPAC_code_simpl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simplified nucleotide alphabet — IUPAC_code_simpl","text":"Character vector","code":""},{"path":"/reference/txtools.html","id":null,"dir":"Reference","previous_headings":"","what":"txtools: A package facilitating analysis of RNA modifications, structures, and interactions — txtools","title":"txtools: A package facilitating analysis of RNA modifications, structures, and interactions — txtools","text":"txtools enables processing, analysis, visualization RNA-seq data nucleotide-level resolution, seamlessly integrating alignments genome transcriptomic representation. txtools’ main inputs BAM files transcriptome annotation, main output table, capturing mismatches,  deletions, number reads beginning ending nucleotide transcriptomic space. txtools facilitates downstream visualization analyses.","code":""},{"path":"/reference/txtools.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"txtools: A package facilitating analysis of RNA modifications, structures, and interactions — txtools","text":"txtools' functions start prefix tx_ grouped families:","code":""},{"path":"/reference/txtools.html","id":"tx-load-","dir":"Reference","previous_headings":"","what":"tx_load_*()","title":"txtools: A package facilitating analysis of RNA modifications, structures, and interactions — txtools","text":"Load initial data genomes (FASTA), gene annotations (BED), mapped reads (BAM).","code":""},{"path":"/reference/txtools.html","id":"tx-add-","dir":"Reference","previous_headings":"","what":"tx_add_*()","title":"txtools: A package facilitating analysis of RNA modifications, structures, and interactions — txtools","text":"Add new variable txDT, generally computing ratio frequency. output new txDT. e.g. tx_add_startRatio(), adds start coverage ratio; tx_add_motifPresence(), adds location RNA sequence motifs across transcriptome","code":""},{"path":"/reference/txtools.html","id":"tx-get-","dir":"Reference","previous_headings":"","what":"tx_get_*()","title":"txtools: A package facilitating analysis of RNA modifications, structures, and interactions — txtools","text":"Extract information txDT generate object txDT. e.g. tx_get_metageneRegions() outputs metagene matrix row representing gene column bin one codifying gene regions","code":""},{"path":"/reference/txtools.html","id":"tx-plot-","dir":"Reference","previous_headings":"","what":"tx_plot_*()","title":"txtools: A package facilitating analysis of RNA modifications, structures, and interactions — txtools","text":"Plotting functions. e.g. tx_plot_nucFreq() tx_plot_staEndCov(), plot counts data nucleotide frequency, read-starts/ends coverage respectively.","code":""},{"path":"/reference/txtools.html","id":"tx-test-","dir":"Reference","previous_headings":"","what":"tx_test_*()","title":"txtools: A package facilitating analysis of RNA modifications, structures, and interactions — txtools","text":"Use txDT objects experimental data statistical tests metrics groups samples. e.g. tx_test_ttest() performs t-tests using list txDTs vector groups.","code":""},{"path":"/reference/txtools.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"txtools: A package facilitating analysis of RNA modifications, structures, and interactions — txtools","text":"Maintainer: Miguel Angel Garcia-Campos garciacampos.bioinfo@gmail.com (ORCID) (https://angelcampos.github.io/)","code":""},{"path":"/reference/tx_add_diffNucToRef.html","id":null,"dir":"Reference","previous_headings":"","what":"Add number of nucleotide reads different to the reference genome — tx_add_diffNucToRef","title":"Add number of nucleotide reads different to the reference genome — tx_add_diffNucToRef","text":"tx_add_diffNucToRef() renamed tx_add_misincCount() Add column DT sum nucleotide frequency different reference sequence counting deletions, without considering 'N's inserts '.' calculation.","code":""},{"path":"/reference/tx_add_diffNucToRef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add number of nucleotide reads different to the reference genome — tx_add_diffNucToRef","text":"","code":"tx_add_diffNucToRef(DT)"},{"path":"/reference/tx_add_diffNucToRef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add number of nucleotide reads different to the reference genome — tx_add_diffNucToRef","text":"DT data.table. data.table object. See tx_makeDT_coverage, tx_makeDT_nucFreq tx_makeDT_covNucFreq functions.","code":""},{"path":"/reference/tx_add_diffNucToRef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add number of nucleotide reads different to the reference genome — tx_add_diffNucToRef","text":"data.table","code":""},{"path":"/reference/tx_add_diffNucToRefRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Add different nucleotide reads to total ratio — tx_add_diffNucToRefRatio","title":"Add different nucleotide reads to total ratio — tx_add_diffNucToRefRatio","text":"tx_add_diffNucToRefRatio() renamed tx_add_misincRate() Add column DT ratio different nucleotides total meaningfuk nucleotide reads counting undetermined 'N' inserts '.'.","code":""},{"path":"/reference/tx_add_diffNucToRefRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add different nucleotide reads to total ratio — tx_add_diffNucToRefRatio","text":"","code":"tx_add_diffNucToRefRatio(DT, addDiffandTotalCols = FALSE)"},{"path":"/reference/tx_add_diffNucToRefRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add different nucleotide reads to total ratio — tx_add_diffNucToRefRatio","text":"DT data.table addDiffandTotalCols Set TRUE add counts total nucleotides read (nucTotal) different reference nucleotide (diffToRef) columns.","code":""},{"path":"/reference/tx_add_diffNucToRefRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add different nucleotide reads to total ratio — tx_add_diffNucToRefRatio","text":"data.table","code":""},{"path":[]},{"path":"/reference/tx_add_endRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ends to coverage ratio 1 bp downstream — tx_add_endRatio","title":"Add ends to coverage ratio 1 bp downstream — tx_add_endRatio","text":"Adds column DT read-ends coverage ratio.","code":""},{"path":"/reference/tx_add_endRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ends to coverage ratio 1 bp downstream — tx_add_endRatio","text":"","code":"tx_add_endRatio(DT, minCov = 50)"},{"path":"/reference/tx_add_endRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ends to coverage ratio 1 bp downstream — tx_add_endRatio","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. minCov numeric. Minimum coverage required output ratio. coverage less NA output position.","code":""},{"path":"/reference/tx_add_endRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ends to coverage ratio 1 bp downstream — tx_add_endRatio","text":"data.table","code":""},{"path":"/reference/tx_add_motifPresence.html","id":null,"dir":"Reference","previous_headings":"","what":"Add motif presence — tx_add_motifPresence","title":"Add motif presence — tx_add_motifPresence","text":"Add motif presence","code":""},{"path":"/reference/tx_add_motifPresence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add motif presence — tx_add_motifPresence","text":"","code":"tx_add_motifPresence(   DT,   motif,   nucPositions = \"all\",   motifColName = \"auto\",   mask_N = TRUE,   nCores = 1 )"},{"path":"/reference/tx_add_motifPresence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add motif presence — tx_add_motifPresence","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. motif character. word depicts DNA sequence motif annotate. function allows IUPAC ambiguity codes, e.g. R=|G. nucPositions character numeric. \"\": mark positions motif \"center\": mark center motif \"\": number can passed ith position marked. example, 'CAC' motif value '2' mark ''s surrounded 'C'. motifColName character. Name new column added annotating motif presence. Automatically set combination input motif nucPositions arguments. mask_N logical. set FALSE, 'N' nucleotides left , therefore matching motifs. .e. consecutive sequence NNNNN match 5 letter motif 'DRACH'; generally desired. nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_add_motifPresence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add motif presence — tx_add_motifPresence","text":"data.table","code":""},{"path":"/reference/tx_add_nucTotal.html","id":null,"dir":"Reference","previous_headings":"","what":"Add total number of nucleotide reads — tx_add_nucTotal","title":"Add total number of nucleotide reads — tx_add_nucTotal","text":"Add column DT sum nucleotide frequencies meaningful nucleotide reads counting undetermined 'N' inserts '.'.","code":""},{"path":"/reference/tx_add_nucTotal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add total number of nucleotide reads — tx_add_nucTotal","text":"","code":"tx_add_nucTotal(DT)"},{"path":"/reference/tx_add_nucTotal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add total number of nucleotide reads — tx_add_nucTotal","text":"DT data.table. table output tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions.","code":""},{"path":"/reference/tx_add_nucTotal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add total number of nucleotide reads — tx_add_nucTotal","text":"data.table","code":""},{"path":"/reference/tx_add_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Add position unique names — tx_add_pos","title":"Add position unique names — tx_add_pos","text":"Adds column DT pastes name gene transcript coordinate creating unique position identifiers, use downstream analysis requires . column added mandatory 'txcoor' column. Unique names formation expected checked default.","code":""},{"path":"/reference/tx_add_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add position unique names — tx_add_pos","text":"","code":"tx_add_pos(DT, sep = \":\", check_uniq = T)"},{"path":"/reference/tx_add_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add position unique names — tx_add_pos","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. sep character. Separator gene txcoor, deafult colon sign. check_uniq logical. Set false override unique position names check.","code":""},{"path":"/reference/tx_add_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add position unique names — tx_add_pos","text":"data.table","code":""},{"path":"/reference/tx_add_refSeqDT.html","id":null,"dir":"Reference","previous_headings":"","what":"Add reference sequence to a data.table — tx_add_refSeqDT","title":"Add reference sequence to a data.table — tx_add_refSeqDT","text":"Adds column characters representing corresponsing nucleotide reference genome position, considering strand transcript. input DT must output, resemble , ","code":""},{"path":"/reference/tx_add_refSeqDT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add reference sequence to a data.table — tx_add_refSeqDT","text":"","code":"tx_add_refSeqDT(DT, genome, geneAnnot, nCores = 1)"},{"path":"/reference/tx_add_refSeqDT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add reference sequence to a data.table — tx_add_refSeqDT","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. genome list. full reference genome sequences, loaded tx_load_genome() prepackaged BSgenome, see ?BSgenome::available.genomes geneAnnot GRanges. Gene annotation loaded tx_load_bed(). nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_add_refSeqDT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add reference sequence to a data.table — tx_add_refSeqDT","text":"data.table","code":""},{"path":"/reference/tx_add_siteAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Add 1bp-site logical annotation — tx_add_siteAnnotation","title":"Add 1bp-site logical annotation — tx_add_siteAnnotation","text":"Add logical variable column DT, genomic coordinates GRanges object used annotate 1 bp sites. TRUE equals presence site provided GRanges object. annotation useful, example, marking already known RNA modification sites.","code":""},{"path":"/reference/tx_add_siteAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add 1bp-site logical annotation — tx_add_siteAnnotation","text":"","code":"tx_add_siteAnnotation(DT, GRanges, colName, nCores = 1)"},{"path":"/reference/tx_add_siteAnnotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add 1bp-site logical annotation — tx_add_siteAnnotation","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. GRanges GRanges. Ranges length 1, marked data.table colName character. Name new column added. nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_add_siteAnnotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add 1bp-site logical annotation — tx_add_siteAnnotation","text":"data.table","code":""},{"path":"/reference/tx_add_startRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Add starts to coverage ratio — tx_add_startRatio","title":"Add starts to coverage ratio — tx_add_startRatio","text":"Add column DT read-starts coverage ratio.","code":""},{"path":"/reference/tx_add_startRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add starts to coverage ratio — tx_add_startRatio","text":"","code":"tx_add_startRatio(DT, minCov = 50)"},{"path":"/reference/tx_add_startRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add starts to coverage ratio — tx_add_startRatio","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. minCov numeric. Minimum coverage required output ratio. coverage less NA output position.","code":""},{"path":"/reference/tx_add_startRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add starts to coverage ratio — tx_add_startRatio","text":"data.table","code":""},{"path":"/reference/tx_complete_DT.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete a DT object missing genes — tx_complete_DT","title":"Complete a DT object missing genes — tx_complete_DT","text":"function adds genomic transcriptomic coordinates genes data data.table generated tx_coverageDT, tx_nucFreqDT, tx_covNucFreqDT functions.","code":""},{"path":"/reference/tx_complete_DT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete a DT object missing genes — tx_complete_DT","text":"","code":"tx_complete_DT(DT, geneAnnot, genome = NULL, nCores = 1)"},{"path":"/reference/tx_complete_DT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete a DT object missing genes — tx_complete_DT","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. geneAnnot GRanges. Gene annotation loaded tx_load_bed(). genome list. full reference genome sequences, loaded tx_load_genome() prepackaged BSgenome, see ?BSgenome::available.genomes nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_complete_DT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete a DT object missing genes — tx_complete_DT","text":"data.table","code":""},{"path":"/reference/tx_complete_DT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complete a DT object missing genes — tx_complete_DT","text":"function meant equalize datasets contain genes, order genes GRanges object used gene annotation.","code":""},{"path":"/reference/tx_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Total counts of reads per gene model — tx_counts","title":"Total counts of reads per gene model — tx_counts","text":"Total counts reads per gene model","code":""},{"path":"/reference/tx_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total counts of reads per gene model — tx_counts","text":"","code":"tx_counts(x)"},{"path":"/reference/tx_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total counts of reads per gene model — tx_counts","text":"x CompressedGRangesList. Genomic Ranges list containing genomic alignments data gene. Constructed via tx_reads() function.","code":""},{"path":"/reference/tx_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total counts of reads per gene model — tx_counts","text":"integer","code":""},{"path":"/reference/tx_cutEnds_DT.html","id":null,"dir":"Reference","previous_headings":"","what":"Cutting 5' and 3' ends of data.table using txcoors — tx_cutEnds_DT","title":"Cutting 5' and 3' ends of data.table using txcoors — tx_cutEnds_DT","text":"function removes heading (5'UTR) trailing (3' UTR) portions data.tables.","code":""},{"path":"/reference/tx_cutEnds_DT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cutting 5' and 3' ends of data.table using txcoors — tx_cutEnds_DT","text":"","code":"tx_cutEnds_DT(DT, cut_5p = 0, cut_3p = 0)"},{"path":"/reference/tx_cutEnds_DT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cutting 5' and 3' ends of data.table using txcoors — tx_cutEnds_DT","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. cut_5p integer Basepairs removed start DT gene cut_3p integer Basepairs removed end DT gene","code":""},{"path":"/reference/tx_cutEnds_DT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cutting 5' and 3' ends of data.table using txcoors — tx_cutEnds_DT","text":"data.table","code":""},{"path":"/reference/tx_dm3_geneAnnot.html","id":null,"dir":"Reference","previous_headings":"","what":"D. melanogaster gene annotation subset path — tx_dm3_geneAnnot","title":"D. melanogaster gene annotation subset path — tx_dm3_geneAnnot","text":"Returns local path -package BED file containing gene models highly expressed genes 'Pasilla' experiment.","code":""},{"path":"/reference/tx_dm3_geneAnnot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"D. melanogaster gene annotation subset path — tx_dm3_geneAnnot","text":"","code":"tx_dm3_geneAnnot()"},{"path":"/reference/tx_dm3_geneAnnot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"D. melanogaster gene annotation subset path — tx_dm3_geneAnnot","text":"character. Path dm3 gene annotation file","code":""},{"path":"/reference/tx_extend_UTR.html","id":null,"dir":"Reference","previous_headings":"","what":"Extending GRanges 5' and 3' UTR blocks — tx_extend_UTR","title":"Extending GRanges 5' and 3' UTR blocks — tx_extend_UTR","text":"function extends 5' /3' UTR regions GRanges including 'blocks' column, defines exon structure transcript. loaded ´tx_load_bed()´.","code":""},{"path":"/reference/tx_extend_UTR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extending GRanges 5' and 3' UTR blocks — tx_extend_UTR","text":"","code":"tx_extend_UTR(GR, ext_5p = 0, ext_3p = 0)"},{"path":"/reference/tx_extend_UTR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extending GRanges 5' and 3' UTR blocks — tx_extend_UTR","text":"GR GRanges GRanges containing blocks ext_5p integer Number bp 5' UTR blocks extended ext_3p integer Number bp 3' UTR blocks extended","code":""},{"path":"/reference/tx_extend_UTR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extending GRanges 5' and 3' UTR blocks — tx_extend_UTR","text":"GRanges","code":""},{"path":"/reference/tx_filter_maxWidth.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter ranges by a maximum width — tx_filter_maxWidth","title":"Filter ranges by a maximum width — tx_filter_maxWidth","text":"Filter ranges maximum width","code":""},{"path":"/reference/tx_filter_maxWidth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter ranges by a maximum width — tx_filter_maxWidth","text":"","code":"tx_filter_maxWidth(x, thr, nCores = 1)"},{"path":"/reference/tx_filter_maxWidth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter ranges by a maximum width — tx_filter_maxWidth","text":"x CompressedGRangesList. Genomic Ranges list containing genomic alignments data gene. Constructed via tx_reads(). thr integer. Threshold maximum width size allowed output. nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_filter_maxWidth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter ranges by a maximum width — tx_filter_maxWidth","text":"CompressedGRangesList","code":""},{"path":"/reference/tx_filter_maxWidth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter ranges by a maximum width — tx_filter_maxWidth","text":"M.. Garcia-Campos","code":""},{"path":"/reference/tx_load_bam.html","id":null,"dir":"Reference","previous_headings":"","what":"Read paired end bam file by yield size — tx_load_bam","title":"Read paired end bam file by yield size — tx_load_bam","text":"Reads file BAM format blocks lines equal yield size, either automatically calculated specified user, loads GenomicAlignments object.","code":""},{"path":"/reference/tx_load_bam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read paired end bam file by yield size — tx_load_bam","text":"","code":"tx_load_bam(   file,   pairedEnd,   yieldSize = 1e+05,   scanFlag = \"default\",   loadSeq = FALSE,   strandMode = 1,   verbose = TRUE )"},{"path":"/reference/tx_load_bam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read paired end bam file by yield size — tx_load_bam","text":"file character. Path file read pairedEnd logical. Set FALSE reads BAM file single-end, set TRUE reads paired-end. yieldSize numeric. Number reads processed time scanFlag integer. Flag used filter reads. See ScanBamParam loadSeq logical. Set TRUE loading sequences contained BAM file strandMode numeric. 1 (default): Strand pair first alignment: Directional Illumina (Ligation), Standard SOLiD. (Single-end change strand) 2: strand pair strand last alignment: dUTP, NSR, NNSR, Illumina stranded TruSeq PE protocol. (Single-end: Change inverse strand) 0: strand pair set '*' (unspecified). mode longer supported tx_reads() . info: GAlignmentPairs-class. verbose logical. Set FALSE show less information.","code":""},{"path":"/reference/tx_load_bam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read paired end bam file by yield size — tx_load_bam","text":"GRanges","code":""},{"path":"/reference/tx_load_bam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read paired end bam file by yield size — tx_load_bam","text":"","code":"# Loading in-package BAM file bamFile <- system.file(\"extdata\", \"example_hg19.bam\", package = \"txtools\") hg19_bam <- tx_load_bam(bamFile, pairedEnd = TRUE, loadSeq = TRUE, verbose = TRUE) #> Reading number of records in file  #> 5061 number of BAM records  #> Loading BAM file  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #> 0 reads filtered out for empty sequence field  #> 2530 Reads succesfully loaded  #> Dumped ambiguous reads: 0  summary(hg19_bam) #> [1] \"GAlignmentPairs object of length 2530 with 0 metadata columns\""},{"path":"/reference/tx_load_bed.html","id":null,"dir":"Reference","previous_headings":"","what":"Load gene models from bed-12 and bed-6 files — tx_load_bed","title":"Load gene models from bed-12 and bed-6 files — tx_load_bed","text":"Reads loads bed files checking compliance bed file structure","code":""},{"path":"/reference/tx_load_bed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load gene models from bed-12 and bed-6 files — tx_load_bed","text":"","code":"tx_load_bed(bedfile)"},{"path":"/reference/tx_load_bed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load gene models from bed-12 and bed-6 files — tx_load_bed","text":"bedfile character. Gene annotation file bed-6 bed-12 format","code":""},{"path":"/reference/tx_load_bed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load gene models from bed-12 and bed-6 files — tx_load_bed","text":"GRanges","code":""},{"path":"/reference/tx_load_bed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load gene models from bed-12 and bed-6 files — tx_load_bed","text":"M.. Garcia-Campos https://angelcampos.github.io/","code":""},{"path":"/reference/tx_load_genome.html","id":null,"dir":"Reference","previous_headings":"","what":"Load genome — tx_load_genome","title":"Load genome — tx_load_genome","text":"Load genome DNAStrinSet FASTA file.","code":""},{"path":"/reference/tx_load_genome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load genome — tx_load_genome","text":"","code":"tx_load_genome(fastaFile)"},{"path":"/reference/tx_load_genome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load genome — tx_load_genome","text":"fastaFile path FASTA file genomic sequences","code":""},{"path":"/reference/tx_load_genome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load genome — tx_load_genome","text":"DNAStringSet","code":""},{"path":"/reference/tx_load_genome.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load genome — tx_load_genome","text":"Chromosome names limited first word separated space","code":""},{"path":"/reference/tx_makeDT_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarized Coverage data.table — tx_makeDT_coverage","title":"Summarized Coverage data.table — tx_makeDT_coverage","text":"function constructs data.table contains coverage metrics per nucleotide transcripts corresponding GRanges first argument 'x': cov = Insert coverage start_5p = read-start counts end_3p = read-end counts","code":""},{"path":"/reference/tx_makeDT_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarized Coverage data.table — tx_makeDT_coverage","text":"","code":"tx_makeDT_coverage(x, geneAnnot, genome = NULL, fullDT = FALSE, nCores = 1)"},{"path":"/reference/tx_makeDT_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarized Coverage data.table — tx_makeDT_coverage","text":"x CompressedGRangesList. Genomic Ranges list containing genomic alignments data gene. Constructed via tx_reads function. geneAnnot GRanges. Gene annotation loaded tx_load_bed() genome list. full reference genome sequences, loaded tx_load_genome() prepackaged BSgenome, see ?BSgenome::available.genomes fullDT logical. Set TRUE desired output data.table genes order 'geneAnnot' object. nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_makeDT_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarized Coverage data.table — tx_makeDT_coverage","text":"data.table","code":""},{"path":[]},{"path":"/reference/tx_makeDT_coverage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarized Coverage data.table — tx_makeDT_coverage","text":"M.. Garcia-Campos","code":""},{"path":"/reference/tx_makeDT_covNucFreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarized Coverage & Nucleotide Frequency data.table — tx_makeDT_covNucFreq","title":"Summarized Coverage & Nucleotide Frequency data.table — tx_makeDT_covNucFreq","text":"function constructs list data.tables contains nucleotide frequency metrics per nucleotide transcript: REF = Equal reference genome . = Insert. read gap read1 read2, counted coverage computation = Adenine C = Cytosine G = Guanine T = Thymine - = Deletion N = Undetermined nucleotide function requires input GRangesList object output tx_reads function, contain sequence alignments transcriptomic space, gene annotation GRanges format, loaded tx_load_bed function.","code":""},{"path":"/reference/tx_makeDT_covNucFreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarized Coverage & Nucleotide Frequency data.table — tx_makeDT_covNucFreq","text":"","code":"tx_makeDT_covNucFreq(   x,   geneAnnot,   genome = NULL,   simplify_IUPAC = \"splitForceInt\",   fullDT = FALSE,   nCores = 1 )"},{"path":"/reference/tx_makeDT_covNucFreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarized Coverage & Nucleotide Frequency data.table — tx_makeDT_covNucFreq","text":"x CompressedGRangesList. Genomic Ranges list containing genomic alignments data gene. Constructed via tx_reads(). geneAnnot GRanges. Gene annotation loaded tx_load_bed() function. genome list. full reference genome sequences, loaded tx_load_genome() prepackaged BSgenome, see ?BSgenome::available.genomes simplify_IUPAC string. Available options : \"\": output complete nucleotide frequency table including ambiguous reads using IUPAC ambiguity code. See: IUPAC_CODE_MAP \"splitForceInt\" (Default): force integers split ambiguous codes split assigned half frequency respective nucleotides, frequency odd number uneven count assigned \"N\". \"splitHalf\": Ambiguous nucleotide frequencies split half corresponding nucleotides, cases frequency odd creating non-integer frequencies. fullDT logical. Set TRUE desired output data.table genes order 'geneAnnot' object. nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_makeDT_covNucFreq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarized Coverage & Nucleotide Frequency data.table — tx_makeDT_covNucFreq","text":"data.table","code":""},{"path":"/reference/tx_makeDT_covNucFreq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarized Coverage & Nucleotide Frequency data.table — tx_makeDT_covNucFreq","text":"function allows usage multiple cores reduce processing times UNIX-like OS.","code":""},{"path":[]},{"path":"/reference/tx_makeDT_covNucFreq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarized Coverage & Nucleotide Frequency data.table — tx_makeDT_covNucFreq","text":"M.. Garcia-Campos","code":""},{"path":"/reference/tx_makeDT_nucFreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarized Nucleotide Frequency data.table — tx_makeDT_nucFreq","title":"Summarized Nucleotide Frequency data.table — tx_makeDT_nucFreq","text":"function constructs list data.tables contains nucleotide frequency metrics per nucleotide transcript: = Adenine C = Cytosine G = Guanine T = Thymine N = Undetermined nucleotide - = Deletion . = Insert, read gap read1 read2 function requires input GRangesList object output tx_reads function, contain sequence alignments transcriptomic space, gene annotation GRanges format, loaded tx_load_bed function.","code":""},{"path":"/reference/tx_makeDT_nucFreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarized Nucleotide Frequency data.table — tx_makeDT_nucFreq","text":"","code":"tx_makeDT_nucFreq(   x,   geneAnnot,   genome = NULL,   simplify_IUPAC = \"splitForceInt\",   fullDT = FALSE,   nCores = 1 )"},{"path":"/reference/tx_makeDT_nucFreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarized Nucleotide Frequency data.table — tx_makeDT_nucFreq","text":"x CompressedGRangesList. Genomic Ranges list containing genomic alignments data gene. Constructed via tx_reads function. geneAnnot GRanges. Gene annotation loaded tx_load_bed() genome list. full reference genome sequences, loaded tx_load_genome() prepackaged BSgenome, see ?BSgenome::available.genomes simplify_IUPAC string. Available options : \"\": output complete nucleotide frequency table including ambiguous reads using IUPAC ambiguity code. See: IUPAC_CODE_MAP \"splitForceInt\" (Default): force integers split ambiguous codes split assigned half frequency respective nucleotides, frequency odd number uneven count assigned \"N\". \"splitHalf\": Ambiguous nucleotide frequencies split half corresponding nucleotides, cases frequency odd creating non-integer frequencies. fullDT logical. Set TRUE desired output data.table genes order 'geneAnnot' object. nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_makeDT_nucFreq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarized Nucleotide Frequency data.table — tx_makeDT_nucFreq","text":"data.table","code":""},{"path":"/reference/tx_makeDT_nucFreq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarized Nucleotide Frequency data.table — tx_makeDT_nucFreq","text":"function allows usage multiple cores reduce processing times UNIX-like OS.","code":""},{"path":[]},{"path":"/reference/tx_makeDT_nucFreq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarized Nucleotide Frequency data.table — tx_makeDT_nucFreq","text":"M.. Garcia-Campos","code":""},{"path":"/reference/tx_merge_DT.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge data.tables in list to a single data.table — tx_merge_DT","title":"Merge data.tables in list to a single data.table — tx_merge_DT","text":"Merge data.tables list single data.table","code":""},{"path":"/reference/tx_merge_DT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge data.tables in list to a single data.table — tx_merge_DT","text":"","code":"tx_merge_DT(DTL)"},{"path":"/reference/tx_merge_DT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge data.tables in list to a single data.table — tx_merge_DT","text":"DTL list. data.tables list. See tx_coverageDT(), tx_nucFreqDT() tx_covNucFreqDT() functions.","code":""},{"path":"/reference/tx_merge_DT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge data.tables in list to a single data.table — tx_merge_DT","text":"data.table","code":""},{"path":"/reference/tx_plot_nucFreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Nucleotide frequency plot — tx_plot_nucFreq","title":"Nucleotide frequency plot — tx_plot_nucFreq","text":"Generates ggplot barplot using nucleotide frequency counts data.tables generated tx_covNucFreqDT().","code":""},{"path":"/reference/tx_plot_nucFreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nucleotide frequency plot — tx_plot_nucFreq","text":"","code":"tx_plot_nucFreq(   DT,   gene,   txRange = 1:nrow(DT),   removeInsert = TRUE,   show_yLabels = TRUE,   bar_border = TRUE,   showLegend = TRUE )"},{"path":"/reference/tx_plot_nucFreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nucleotide frequency plot — tx_plot_nucFreq","text":"DT data.table. Input data generate plot gene character. Name gene DT wants plotted. txRange integer. Range data used, 'txcoor' column used delimit range data.table. removeInsert logical. Removes counts insert reads, call nucleotide, just gap read1 read2. show_yLabels logical. set FALSE hides y axis labels. bar_border logical. set FALSE removes border bars. showLegend logical. set FALSE renger legend.","code":""},{"path":"/reference/tx_plot_nucFreq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nucleotide frequency plot — tx_plot_nucFreq","text":"ggplot","code":""},{"path":"/reference/tx_plot_staEndCov.html","id":null,"dir":"Reference","previous_headings":"","what":"Transcript coverage plot highlighting read-starts and read-ends counts — tx_plot_staEndCov","title":"Transcript coverage plot highlighting read-starts and read-ends counts — tx_plot_staEndCov","text":"Transcript coverage plot highlighting read-starts read-ends counts","code":""},{"path":"/reference/tx_plot_staEndCov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcript coverage plot highlighting read-starts and read-ends counts — tx_plot_staEndCov","text":"","code":"tx_plot_staEndCov(   DT,   gene,   txRange = 1:nrow(DT),   removeCov = FALSE,   show_yLabels = TRUE,   bar_border = TRUE,   showLegend = TRUE )"},{"path":"/reference/tx_plot_staEndCov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transcript coverage plot highlighting read-starts and read-ends counts — tx_plot_staEndCov","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. gene character. Name gene DT wants plotted. txRange integer. Range data used, 'txcoor' column used delimit range data.table. removeCov logical. set TRUE remove coverage counts. show_yLabels logical. set FALSE hides y axis labels. bar_border logical. set FALSE removes border bars. showLegend logical. set FALSE renger legend.","code":""},{"path":"/reference/tx_plot_staEndCov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transcript coverage plot highlighting read-starts and read-ends counts — tx_plot_staEndCov","text":"ggplot","code":""},{"path":"/reference/tx_reads.html","id":null,"dir":"Reference","previous_headings":"","what":"Transcriptomic reads convertion — tx_reads","title":"Transcriptomic reads convertion — tx_reads","text":"Assign aligned reads respective gene models convert positions corresponding transcriptomic coordinate system. also stitches together paired-end aligned reads single sequence dots '.' separate Read1 Read2 corresponding insert.","code":""},{"path":"/reference/tx_reads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transcriptomic reads convertion — tx_reads","text":"","code":"tx_reads(   reads,   geneAnnot,   minReads = 50,   withSeq = FALSE,   verbose = TRUE,   ignore.strand = FALSE,   nCores = 1 )"},{"path":"/reference/tx_reads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transcriptomic reads convertion — tx_reads","text":"reads GAlignments GAlignmentPairs. Genomic alignments processed geneAnnot GRanges. Gene annotation loaded tx_load_bed() minReads integer. Minimum number alignments required overlap gene withSeq logical. Set TRUE sequence preserved; 'reads' object contain sequences. verbose logical. Set FALSE show less information. ignore.strand logical. Set TRUE allow alignments gene ignoring strand alignment. False default. nCores integer. Number cores run function . Multi-core capability available Windows OS.","code":""},{"path":"/reference/tx_reads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transcriptomic reads convertion — tx_reads","text":"GRanges","code":""},{"path":"/reference/tx_reads.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transcriptomic reads convertion — tx_reads","text":"retrieve unassigned alignments use function tx_get_unassignedAlignments()","code":""},{"path":"/reference/tx_sample_GRList.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling alignments — tx_sample_GRList","title":"Sampling alignments — tx_sample_GRList","text":"Sampling alignmnets GRanges list using binomial distribution.","code":""},{"path":"/reference/tx_sample_GRList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling alignments — tx_sample_GRList","text":"","code":"tx_sample_GRList(x, p, nCores = 1)"},{"path":"/reference/tx_sample_GRList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling alignments — tx_sample_GRList","text":"x CompressedGRangesList. list containing alignments, meant used output tx_reads function. p Probabilty read sampled. nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_sample_GRList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling alignments — tx_sample_GRList","text":"CompressedGRangesList.","code":""},{"path":"/reference/tx_split_DT.html","id":null,"dir":"Reference","previous_headings":"","what":"Split data.table to list of data.tables — tx_split_DT","title":"Split data.table to list of data.tables — tx_split_DT","text":"Split data.table back list individual data.tables 'gene' names","code":""},{"path":"/reference/tx_split_DT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split data.table to list of data.tables — tx_split_DT","text":"","code":"tx_split_DT(DT, dropEmpty = TRUE)"},{"path":"/reference/tx_split_DT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split data.table to list of data.tables — tx_split_DT","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. dropEmpty logical. Drops empty list elements, occurs data genes entirely removed, kept listed x$gene factor levels.","code":""},{"path":"/reference/tx_split_DT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split data.table to list of data.tables — tx_split_DT","text":"list","code":""},{"path":"/reference/window_around.html","id":null,"dir":"Reference","previous_headings":"","what":"Centered numeric sequence — window_around","title":"Centered numeric sequence — window_around","text":"Creates numerical sequence centered first argument extends leght second argument positive negative directions.","code":""},{"path":"/reference/window_around.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centered numeric sequence — window_around","text":"","code":"window_around(position, windowLength)"},{"path":"/reference/window_around.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Centered numeric sequence — window_around","text":"position integer. Center sequence windowLength integer. Length downstream upstream flanks","code":""},{"path":"/reference/window_around.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Centered numeric sequence — window_around","text":"integer","code":""},{"path":"/reference/window_around.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Centered numeric sequence — window_around","text":"","code":"# Numeric interval centered in 10, with 5 closest negative # and positive integers window_around(10, 5) #>  [1]  5  6  7  8  9 10 11 12 13 14 15"},{"path":"/reference/annotSites_RRACH.html","id":null,"dir":"Reference","previous_headings":"","what":"RRACH sites annotation D. melanogaster — annotSites_RRACH","title":"RRACH sites annotation D. melanogaster — annotSites_RRACH","text":"RRACH sites annotation User's guide toy example D. melanogaster selected genes","code":""},{"path":"/reference/annotSites_RRACH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RRACH sites annotation D. melanogaster — annotSites_RRACH","text":"","code":"annotSites_RRACH"},{"path":"/reference/annotSites_RRACH.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RRACH sites annotation D. melanogaster — annotSites_RRACH","text":"GRanges","code":""},{"path":"/reference/bam_sk1.html","id":null,"dir":"Reference","previous_headings":"","what":"Genomic Alignments example - Sk1 yeast — bam_sk1","title":"Genomic Alignments example - Sk1 yeast — bam_sk1","text":"Paired-end alignment data extracted Schwartz et al., 2013, Sk1 yeast strain dataset.","code":""},{"path":"/reference/bam_sk1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genomic Alignments example - Sk1 yeast — bam_sk1","text":"","code":"bam_sk1"},{"path":"/reference/bam_sk1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Genomic Alignments example - Sk1 yeast — bam_sk1","text":"GAlignmentPairs","code":""},{"path":"/reference/gA_sk1.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene annotation example - Sk1 yeast — gA_sk1","title":"Gene annotation example - Sk1 yeast — gA_sk1","text":"2 genes models yeast strain Sk1","code":""},{"path":"/reference/gA_sk1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene annotation example - Sk1 yeast — gA_sk1","text":"","code":"gA_sk1"},{"path":"/reference/gA_sk1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene annotation example - Sk1 yeast — gA_sk1","text":"GRanges","code":""},{"path":"/reference/genome_sk1.html","id":null,"dir":"Reference","previous_headings":"","what":"Genome example - Sk1 yeast — genome_sk1","title":"Genome example - Sk1 yeast — genome_sk1","text":"Genomic sequence chromosomes 4 5 yeast strain Sk1","code":""},{"path":"/reference/genome_sk1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genome example - Sk1 yeast — genome_sk1","text":"","code":"genome_sk1"},{"path":"/reference/genome_sk1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Genome example - Sk1 yeast — genome_sk1","text":"DNAStringSet","code":""},{"path":"/reference/getDumpedAlignments.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve dumped alignments — getDumpedAlignments","title":"Retrieve dumped alignments — getDumpedAlignments","text":"Alias GenomicAlignments::getDumpedAlignments. Retrieve ambiguous reads included loaded object. info check: findMateAlignment","code":""},{"path":"/reference/getDumpedAlignments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve dumped alignments — getDumpedAlignments","text":"","code":"getDumpedAlignments()"},{"path":"/reference/mm_geneAnnot.html","id":null,"dir":"Reference","previous_headings":"","what":"Download gene annotation - Case study # 2 — mm_geneAnnot","title":"Download gene annotation - Case study # 2 — mm_geneAnnot","text":"Download mm9 gene annotation temporary file. Selected genes (toy example).","code":""},{"path":"/reference/mm_geneAnnot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download gene annotation - Case study # 2 — mm_geneAnnot","text":"","code":"mm_geneAnnot()"},{"path":"/reference/mm_geneAnnot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download gene annotation - Case study # 2 — mm_geneAnnot","text":"character","code":""},{"path":"/reference/mm_geneAnnot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download gene annotation - Case study # 2 — mm_geneAnnot","text":"Source: UCSC genes https://genome.ucsc.edu/cgi-bin/hgTables","code":""},{"path":"/reference/sc_geneAnnot.html","id":null,"dir":"Reference","previous_headings":"","what":"Download gene annotation - Case study #1 — sc_geneAnnot","title":"Download gene annotation - Case study #1 — sc_geneAnnot","text":"Download rRNA gene annotation Saccharomyces cerevisae strain SK1 temporary file","code":""},{"path":"/reference/sc_geneAnnot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download gene annotation - Case study #1 — sc_geneAnnot","text":"","code":"sc_geneAnnot()"},{"path":"/reference/sc_geneAnnot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download gene annotation - Case study #1 — sc_geneAnnot","text":"character","code":""},{"path":"/reference/sc_rRNAmods_Taoka.html","id":null,"dir":"Reference","previous_headings":"","what":"Sk1 rRNA modifications catalogue — sc_rRNAmods_Taoka","title":"Sk1 rRNA modifications catalogue — sc_rRNAmods_Taoka","text":"Source: Taoka et al., 2016 (https://doi.org/10.1093/nar/gkw564)","code":""},{"path":"/reference/sc_rRNAmods_Taoka.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sk1 rRNA modifications catalogue — sc_rRNAmods_Taoka","text":"","code":"sc_rRNAmods_Taoka"},{"path":"/reference/sc_rRNAmods_Taoka.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sk1 rRNA modifications catalogue — sc_rRNAmods_Taoka","text":"data.table","code":""},{"path":"/reference/sc_txDTL.html","id":null,"dir":"Reference","previous_headings":"","what":"txtools-processed data - Case study # 1 — sc_txDTL","title":"txtools-processed data - Case study # 1 — sc_txDTL","text":"txtools-processed data - Case study # 1","code":""},{"path":"/reference/sc_txDTL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"txtools-processed data - Case study # 1 — sc_txDTL","text":"","code":"sc_txDTL"},{"path":"/reference/sc_txDTL.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"txtools-processed data - Case study # 1 — sc_txDTL","text":"list","code":""},{"path":"/reference/tk_faGenome.html","id":null,"dir":"Reference","previous_headings":"","what":"Download genome to temporary file - Case study # 3 — tk_faGenome","title":"Download genome to temporary file - Case study # 3 — tk_faGenome","text":"Thermococcus kodakarensis complete genome Source: https://www.ncbi.nlm.nih.gov/assembly/GCF_000009965.1/","code":""},{"path":"/reference/tk_faGenome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download genome to temporary file - Case study # 3 — tk_faGenome","text":"","code":"tk_faGenome()"},{"path":"/reference/tk_faGenome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download genome to temporary file - Case study # 3 — tk_faGenome","text":"character","code":""},{"path":"/reference/tk_geneAnnot.html","id":null,"dir":"Reference","previous_headings":"","what":"Download gene annotation - Case study # 3 — tk_geneAnnot","title":"Download gene annotation - Case study # 3 — tk_geneAnnot","text":"Download T. kodakarensis rRNA gene annotation temporary file Source:","code":""},{"path":"/reference/tk_geneAnnot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download gene annotation - Case study # 3 — tk_geneAnnot","text":"","code":"tk_geneAnnot()"},{"path":"/reference/tk_geneAnnot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download gene annotation - Case study # 3 — tk_geneAnnot","text":"character","code":""},{"path":"/reference/txDTL_Tk.html","id":null,"dir":"Reference","previous_headings":"","what":"txtools-processed data - Case study # 3 — txDTL_Tk","title":"txtools-processed data - Case study # 3 — txDTL_Tk","text":"txtools-processed data - Case study # 3","code":""},{"path":"/reference/txDTL_Tk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"txtools-processed data - Case study # 3 — txDTL_Tk","text":"","code":"txDTL_Tk"},{"path":"/reference/txDTL_Tk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"txtools-processed data - Case study # 3 — txDTL_Tk","text":"list","code":""},{"path":"/reference/tx_add_endRatio1bpUS.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ends to coverage ratio 1bp up-stream — tx_add_endRatio1bpUS","title":"Add ends to coverage ratio 1bp up-stream — tx_add_endRatio1bpUS","text":"Add ends coverage ratio 1bp -stream","code":""},{"path":"/reference/tx_add_endRatio1bpUS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ends to coverage ratio 1bp up-stream — tx_add_endRatio1bpUS","text":"","code":"tx_add_endRatio1bpUS(DT, minCov = 50)"},{"path":"/reference/tx_add_endRatio1bpUS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ends to coverage ratio 1bp up-stream — tx_add_endRatio1bpUS","text":"DT data.table. table output tx_makeDT_coverage() tx_makeDT_covNucFreq() functions. minCov numeric. Minimum coverage required output ratio. coverage less NA output position. output positions assign 0.","code":""},{"path":"/reference/tx_add_endRatio1bpUS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ends to coverage ratio 1bp up-stream — tx_add_endRatio1bpUS","text":"data.table","code":""},{"path":"/reference/tx_add_misincCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Add counts of nucleotide reads different to the reference sequence — tx_add_misincCount","title":"Add counts of nucleotide reads different to the reference sequence — tx_add_misincCount","text":"Add column txDT sum nucleotide frequency different reference sequence, counting deletions, without considering 'N's inserts '.' calculation.","code":""},{"path":"/reference/tx_add_misincCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add counts of nucleotide reads different to the reference sequence — tx_add_misincCount","text":"","code":"tx_add_misincCount(DT)"},{"path":"/reference/tx_add_misincCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add counts of nucleotide reads different to the reference sequence — tx_add_misincCount","text":"DT data.table. table output tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions.","code":""},{"path":"/reference/tx_add_misincCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add counts of nucleotide reads different to the reference sequence — tx_add_misincCount","text":"data.table","code":""},{"path":"/reference/tx_add_misincRate.html","id":null,"dir":"Reference","previous_headings":"","what":"Add misincorporation to total nucleotide reads ratio — tx_add_misincRate","title":"Add misincorporation to total nucleotide reads ratio — tx_add_misincRate","text":"Add column txDT ratio different nucleotides total nucleotide reads, counting undetermined reads 'N' inserts '.'.","code":""},{"path":"/reference/tx_add_misincRate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add misincorporation to total nucleotide reads ratio — tx_add_misincRate","text":"","code":"tx_add_misincRate(DT, minNucReads = 20, addCounts = FALSE)"},{"path":"/reference/tx_add_misincRate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add misincorporation to total nucleotide reads ratio — tx_add_misincRate","text":"DT data.table. table output tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. minNucReads Minimum number nucleotides read needed calculate misincorporation rate addCounts Set TRUE add counts total nucleotides read (nucTotal) different reference nucleotide (misincCount) columns.","code":""},{"path":"/reference/tx_add_misincRate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add misincorporation to total nucleotide reads ratio — tx_add_misincRate","text":"data.table","code":""},{"path":[]},{"path":"/reference/tx_add_misincRateNucSpec.html","id":null,"dir":"Reference","previous_headings":"","what":"Nucleotide specific misincorporation rate — tx_add_misincRateNucSpec","title":"Nucleotide specific misincorporation rate — tx_add_misincRateNucSpec","text":"Calculates misincorporation rate reference nucleotide specific misincorporated nucleotide. example, looking positions cytidines read thymine RNA bisulphite treatment.","code":""},{"path":"/reference/tx_add_misincRateNucSpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nucleotide specific misincorporation rate — tx_add_misincRateNucSpec","text":"","code":"tx_add_misincRateNucSpec(DT, refNuc, misNuc, minNucReads = 20)"},{"path":"/reference/tx_add_misincRateNucSpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nucleotide specific misincorporation rate — tx_add_misincRateNucSpec","text":"DT data.table. table output tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. refNuc Reference nucleotide See tx_add_refSeqDT() misNuc Misincorporated nucleotide minNucReads Minimum number nucleotides read needed calculate misincorporation rate","code":""},{"path":"/reference/tx_add_misincRateNucSpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nucleotide specific misincorporation rate — tx_add_misincRateNucSpec","text":"data.table","code":""},{"path":"/reference/tx_add_rollingMean.html","id":null,"dir":"Reference","previous_headings":"","what":"Add rolling mean — tx_add_rollingMean","title":"Add rolling mean — tx_add_rollingMean","text":"Add rolling mean","code":""},{"path":"/reference/tx_add_rollingMean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add rolling mean — tx_add_rollingMean","text":"","code":"tx_add_rollingMean(   DT,   colName,   winSize,   newColName = NULL,   fill = NA,   align = \"center\",   minCov = 20,   nCores = 1 )"},{"path":"/reference/tx_add_rollingMean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add rolling mean — tx_add_rollingMean","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. colName character. Column rolling mean applied winSize numeric. Size window newColName character. Name given output. left empty, assign default name, combination colName winSize arguments. fill Either empty vector (fill), vector (recycled ) length 3 giving left, middle right fills. default NA. align character. Align windows \"left\", \"center\" \"right\". minCov numeric. Minimum coverage required output ratio. coverage less NA output position. output positions assign 0. nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_add_rollingMean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add rolling mean — tx_add_rollingMean","text":"data.table","code":""},{"path":"/reference/tx_add_startRatio1bpDS.html","id":null,"dir":"Reference","previous_headings":"","what":"Add starts to coverage ratio 1 bp downstream — tx_add_startRatio1bpDS","title":"Add starts to coverage ratio 1 bp downstream — tx_add_startRatio1bpDS","text":"Add column DT read-starts coverage ratio, shifted 1 base-pair downstream. means last measurement gene always NA account measurement shifted.","code":""},{"path":"/reference/tx_add_startRatio1bpDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add starts to coverage ratio 1 bp downstream — tx_add_startRatio1bpDS","text":"","code":"tx_add_startRatio1bpDS(DT, minCov = 50)"},{"path":"/reference/tx_add_startRatio1bpDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add starts to coverage ratio 1 bp downstream — tx_add_startRatio1bpDS","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. minCov numeric. Minimum coverage required output ratio. coverage less NA output position.","code":""},{"path":"/reference/tx_add_startRatio1bpDS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add starts to coverage ratio 1 bp downstream — tx_add_startRatio1bpDS","text":"data.table","code":""},{"path":"/reference/tx_data_caseStudy2.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data - Case study #2 — tx_data_caseStudy2","title":"Load data - Case study #2 — tx_data_caseStudy2","text":"Load data - Case study #2","code":""},{"path":"/reference/tx_data_caseStudy2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data - Case study #2 — tx_data_caseStudy2","text":"","code":"tx_data_caseStudy2()"},{"path":"/reference/tx_data_caseStudy2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data - Case study #2 — tx_data_caseStudy2","text":"character","code":""},{"path":"/reference/tx_generateSingleEndFASTQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate single-end FASTQ file — tx_generateSingleEndFASTQ","title":"Generate single-end FASTQ file — tx_generateSingleEndFASTQ","text":"Simulates single-end FASTQ file genome gene annotation. distribution reads randomly selected following negative binomial distribution.","code":""},{"path":"/reference/tx_generateSingleEndFASTQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate single-end FASTQ file — tx_generateSingleEndFASTQ","text":"","code":"tx_generateSingleEndFASTQ(   genome,   geneAnnot,   readLen,   libSize,   fileName,   TPM = NULL,   NB_r = 5,   NB_mu = 500,   nCores )"},{"path":"/reference/tx_generateSingleEndFASTQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate single-end FASTQ file — tx_generateSingleEndFASTQ","text":"genome list. full reference genome sequences, loaded tx_load_genome() prepackaged BSgenome, see ?BSgenome::available.genomes geneAnnot GRanges. Gene annotation loaded tx_load_bed(). readLen integer. Length simulated reads libSize integer. Size simulated FASTQ file fileName character. Name output file. TPM numeric. Proportion reads per gene gene annotation NB_r numeric. Target r dispersion parameter. Bigger values r tend generate normal distribution. See ?stats::rnbinom() NB_mu numeric. Target mean resulting distribution nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_generateSingleEndFASTQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate single-end FASTQ file — tx_generateSingleEndFASTQ","text":"Writes FASTQ fileName","code":""},{"path":"/reference/tx_get_flankSequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Get flanking sequences — tx_get_flankSequence","title":"Get flanking sequences — tx_get_flankSequence","text":"Get flanking sequences","code":""},{"path":"/reference/tx_get_flankSequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get flanking sequences — tx_get_flankSequence","text":"","code":"tx_get_flankSequence(DT, logi_col, upFlank, doFlank, addNames = FALSE)"},{"path":"/reference/tx_get_flankSequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get flanking sequences — tx_get_flankSequence","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. logi_col character. Name column logical class, indicates queried sites upFlank numeric. -stream flank length doFlank numeric. -stream flank length addNames logical. Set TRUE add names sequence format \"gene:txcoor\". Default FALSE.","code":""},{"path":"/reference/tx_get_flankSequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get flanking sequences — tx_get_flankSequence","text":"character","code":""},{"path":"/reference/tx_get_flanksFromLogicAnnot.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data from a position and their neighboring positions — tx_get_flanksFromLogicAnnot","title":"Get data from a position and their neighboring positions — tx_get_flanksFromLogicAnnot","text":"Get data positions marked TRUE logical variable center values vicinity, delimited flank size. Useful aggregate data surrounding specific sites motif locations.","code":""},{"path":"/reference/tx_get_flanksFromLogicAnnot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data from a position and their neighboring positions — tx_get_flanksFromLogicAnnot","text":"","code":"tx_get_flanksFromLogicAnnot(   DT,   logi_col,   values_col,   upFlank,   doFlank,   addRowNames = TRUE )"},{"path":"/reference/tx_get_flanksFromLogicAnnot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data from a position and their neighboring positions — tx_get_flanksFromLogicAnnot","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. logi_col character. Name column logical class, indicates queried sites values_col character upFlank numeric. -stream flank length doFlank numeric. -stream flank length addRowNames logical. Set TRUE add rownames format \"gene:txcoor\". Default FALSE.","code":""},{"path":"/reference/tx_get_flanksFromLogicAnnot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data from a position and their neighboring positions — tx_get_flanksFromLogicAnnot","text":"matrix","code":""},{"path":"/reference/tx_get_geneLengths.html","id":null,"dir":"Reference","previous_headings":"","what":"Get length of genes — tx_get_geneLengths","title":"Get length of genes — tx_get_geneLengths","text":"Outputs length transcripts DT","code":""},{"path":"/reference/tx_get_geneLengths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get length of genes — tx_get_geneLengths","text":"","code":"tx_get_geneLengths(DT)"},{"path":"/reference/tx_get_geneLengths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get length of genes — tx_get_geneLengths","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions.","code":""},{"path":"/reference/tx_get_geneLengths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get length of genes — tx_get_geneLengths","text":"named numeric. Length genes per times appear DT","code":""},{"path":"/reference/tx_get_metageneAtCDS.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metagene at CDS — tx_get_metageneAtCDS","title":"Get metagene at CDS — tx_get_metageneAtCDS","text":"Get metagene CDS","code":""},{"path":"/reference/tx_get_metageneAtCDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metagene at CDS — tx_get_metageneAtCDS","text":"","code":"tx_get_metageneAtCDS(txDT, geneAnnot, colVars, CDS_align, upFlank, doFlank)"},{"path":"/reference/tx_get_metageneAtCDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metagene at CDS — tx_get_metageneAtCDS","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. geneAnnot GRanges. Gene annotation loaded tx_load_bed(). colVars character. Names columns values extracted CDS_align character. Either \"start\", \"end\", \"spliceSite\" depending desired alignment, either CDS start, CDS end, splicing sites, respectively. upFlank numeric. -stream flank length doFlank numeric. -stream flank length","code":""},{"path":"/reference/tx_get_metageneAtCDS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metagene at CDS — tx_get_metageneAtCDS","text":"list matrices colVar","code":""},{"path":"/reference/tx_get_transcriptSeqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get transcriptome sequences — tx_get_transcriptSeqs","title":"Get transcriptome sequences — tx_get_transcriptSeqs","text":"Get transcriptome sequences","code":""},{"path":"/reference/tx_get_transcriptSeqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get transcriptome sequences — tx_get_transcriptSeqs","text":"","code":"tx_get_transcriptSeqs(genome, geneAnnot, outFile = NULL, nCores = 1)"},{"path":"/reference/tx_get_transcriptSeqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get transcriptome sequences — tx_get_transcriptSeqs","text":"genome list. full reference genome sequences, loaded tx_load_genome() prepackaged BSgenome, see ?BSgenome::available.genomes geneAnnot GRanges. Gene annotation loaded tx_load_bed(). outFile character. specified, sequences written file name. Otherwise character vector output nCores integer. Number cores run function . Multi-core capability available Windows OS.","code":""},{"path":"/reference/tx_get_transcriptSeqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get transcriptome sequences — tx_get_transcriptSeqs","text":"character","code":""},{"path":"/reference/tx_load_rdsDT.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading RDS files into data.tables — tx_load_rdsDT","title":"Loading RDS files into data.tables — tx_load_rdsDT","text":"Loading RDS files data.tables","code":""},{"path":"/reference/tx_load_rdsDT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading RDS files into data.tables — tx_load_rdsDT","text":"","code":"tx_load_rdsDT(file)"},{"path":"/reference/tx_load_rdsDT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading RDS files into data.tables — tx_load_rdsDT","text":"file File name path .rds file loaded","code":""},{"path":"/reference/tx_load_rdsDT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading RDS files into data.tables — tx_load_rdsDT","text":"data.table","code":""},{"path":"/reference/tx_orderDT.html","id":null,"dir":"Reference","previous_headings":"","what":"Order txDT — tx_orderDT","title":"Order txDT — tx_orderDT","text":"Orders txDT gene name transcriptomic coordinate (txcoor). Accordingly reorders chromosome, strand, gene factors' levels","code":""},{"path":"/reference/tx_orderDT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order txDT — tx_orderDT","text":"","code":"tx_orderDT(DT)"},{"path":"/reference/tx_orderDT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order txDT — tx_orderDT","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions.","code":""},{"path":"/reference/tx_orderDT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order txDT — tx_orderDT","text":"data.table","code":""},{"path":"/reference/tx_plot_ggseqlogo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot motif centered in logical annotation — tx_plot_ggseqlogo","title":"Plot motif centered in logical annotation — tx_plot_ggseqlogo","text":"Plots motif sequence surrounding sites marked TRUE logical vector ","code":""},{"path":"/reference/tx_plot_ggseqlogo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot motif centered in logical annotation — tx_plot_ggseqlogo","text":"","code":"tx_plot_ggseqlogo(DT, logi_col, upFlank, doFlank, method = \"bits\")"},{"path":"/reference/tx_plot_ggseqlogo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot motif centered in logical annotation — tx_plot_ggseqlogo","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. logi_col character. Name column logical class, indicates queried sites upFlank numeric. -stream flank length doFlank numeric. -stream flank length method character. Height method, can either \"bits\" \"probability\". Default = \"bits\".","code":""},{"path":"/reference/tx_plot_ggseqlogo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot motif centered in logical annotation — tx_plot_ggseqlogo","text":"ggplot","code":""},{"path":"/reference/tx_plot_metageneAtCDS.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot metagene at CDS — tx_plot_metageneAtCDS","title":"Plot metagene at CDS — tx_plot_metageneAtCDS","text":"Plot metagene CDS","code":""},{"path":"/reference/tx_plot_metageneAtCDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot metagene at CDS — tx_plot_metageneAtCDS","text":"","code":"tx_plot_metageneAtCDS(   txDT,   geneAnnot,   colVars,   CDS_align,   upFlank,   doFlank,   summ_fun = \"mean\",   roll_fun = NULL,   roll_n = 100,   roll_align = \"center\",   roll_fill = NA,   smooth = TRUE,   spar = 0.3,   na.rm = TRUE,   normalize = FALSE,   tick_by = NULL )"},{"path":"/reference/tx_plot_metageneAtCDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot metagene at CDS — tx_plot_metageneAtCDS","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. geneAnnot GRanges. Gene annotation loaded tx_load_bed(). colVars character. Names columns values extracted CDS_align character. Either \"start\", \"end\", \"spliceSite\" depending desired alignment, either CDS start, CDS end, splicing sites, respectively. upFlank numeric. -stream flank length doFlank numeric. -stream flank length summ_fun character. Summing function either \"sum\" \"mean\". Default: \"mean\" roll_fun character. Rolling function either \"sum\" \"mean\". Default: NULL roll_n numeric. Window size rolling function roll_align character. Either \"center\" (default), \"left\" \"right\" roll_fill vector. Either empty vector (fill), vector (recycled ) length 3 giving left, middle right fills. NA default smooth logical. Set FALSE smoothing line. spar numeric. Smoothing parameter, typically (necessarily) (0,1]. na.rm logical. Omit NAs computations. Default: TRUE normalize logical. set TRUE, values normalized area bellow curve approximates 1 variable. tick_by numeric. Distance ticks plot. Default: upFlank/2","code":""},{"path":"/reference/tx_plot_metageneAtCDS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot metagene at CDS — tx_plot_metageneAtCDS","text":"ggplot","code":""},{"path":[]},{"path":"/reference/tx_shift_geneWise.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift column in txDT — tx_shift_geneWise","title":"Shift column in txDT — tx_shift_geneWise","text":"Shift column txDT","code":""},{"path":"/reference/tx_shift_geneWise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift column in txDT — tx_shift_geneWise","text":"","code":"tx_shift_geneWise(DT, colToShift, direction, bp, nCores = 1)"},{"path":"/reference/tx_shift_geneWise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift column in txDT — tx_shift_geneWise","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. colToShift character. Name column shifted direction character. Direction shift, either 'downstream' 'upstream'. bp integer. Number nucleotides shift data nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_shift_geneWise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shift column in txDT — tx_shift_geneWise","text":"data.table","code":""},{"path":"/reference/tx_test_LRTedgeR.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood Ratio Test — tx_test_LRTedgeR","title":"Likelihood Ratio Test — tx_test_LRTedgeR","text":"Likelihood Ratio Test","code":""},{"path":"/reference/tx_test_LRTedgeR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood Ratio Test — tx_test_LRTedgeR","text":"","code":"tx_test_LRTedgeR(DTL, tVar, sVar, test_groups, minTrials = 50)"},{"path":"/reference/tx_test_LRTedgeR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood Ratio Test — tx_test_LRTedgeR","text":"DTL list. List txDT, element represents replicate experimental dataset. tVar character. Variable represents number trials, e.g. coverage sVar character. Variable represents number successes, e.g. start_5p test_groups factor. Factor specifying \"WT\" \"KO\" samples. minTrials integer. Minimum number trials position considered statistical testing.","code":""},{"path":"/reference/tx_test_LRTedgeR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood Ratio Test — tx_test_LRTedgeR","text":"data.table","code":""},{"path":"/reference/tx_test_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"t-test in txDT list — tx_test_ttest","title":"t-test in txDT list — tx_test_ttest","text":"Apply t-test per nucleotide position separating groups txDT list. least 2 samples group needed.","code":""},{"path":"/reference/tx_test_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"t-test in txDT list — tx_test_ttest","text":"","code":"tx_test_ttest(DTL, cont_var, test_groups, test_na.rm = FALSE, ...)"},{"path":"/reference/tx_test_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"t-test in txDT list — tx_test_ttest","text":"DTL list. List txDT, element represents replicate experimental dataset. cont_var character. Name column, specifying continuous variable used test. test_groups factor. Factor specifying \"WT\" \"KO\" samples. test_na.rm logical. Remove NAs tests ... use rowttests","code":""},{"path":"/reference/tx_test_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"t-test in txDT list — tx_test_ttest","text":"data.table","code":""},{"path":"/reference/tx_unifyTxDTL.html","id":null,"dir":"Reference","previous_headings":"","what":"Unify lists of txDTs — tx_unifyTxDTL","title":"Unify lists of txDTs — tx_unifyTxDTL","text":"Unify lists txDTs","code":""},{"path":"/reference/tx_unifyTxDTL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unify lists of txDTs — tx_unifyTxDTL","text":"","code":"tx_unifyTxDTL(   txDTL,   geneAnnot = NULL,   genome = NULL,   type = \"intersection\",   nCores = 1 )"},{"path":"/reference/tx_unifyTxDTL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unify lists of txDTs — tx_unifyTxDTL","text":"txDTL list. list txDTs geneAnnot GRanges. Gene annotation loaded tx_load_bed(). genome list. full reference genome sequences, loaded tx_load_genome() prepackaged BSgenome, see ?BSgenome::available.genomes type character. Set function apply genes list txDTs, either 'union' 'intersection'. nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_unifyTxDTL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unify lists of txDTs — tx_unifyTxDTL","text":"list","code":""},{"path":"/reference/tx_add_spliceSitesLogical.html","id":null,"dir":"Reference","previous_headings":"","what":"Add SpliceSites — tx_add_spliceSitesLogical","title":"Add SpliceSites — tx_add_spliceSitesLogical","text":"Add SpliceSites","code":""},{"path":"/reference/tx_add_spliceSitesLogical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add SpliceSites — tx_add_spliceSitesLogical","text":"","code":"tx_add_spliceSitesLogical(txDT, geneAnnot)"},{"path":"/reference/tx_add_spliceSitesLogical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add SpliceSites — tx_add_spliceSitesLogical","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. geneAnnot GRanges. Gene annotation loaded tx_load_bed().","code":""},{"path":"/reference/tx_add_spliceSitesLogical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add SpliceSites — tx_add_spliceSitesLogical","text":"data.table","code":""},{"path":"/reference/sc_faGenome.html","id":null,"dir":"Reference","previous_headings":"","what":"Download genome to temporary file - Case study # 1 — sc_faGenome","title":"Download genome to temporary file - Case study # 1 — sc_faGenome","text":"Sk1 genome. Source Schwartz et al., 2013 https://doi.org/10.1016/j.cell.2013.10.047","code":""},{"path":"/reference/sc_faGenome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download genome to temporary file - Case study # 1 — sc_faGenome","text":"","code":"sc_faGenome()"},{"path":"/reference/sc_faGenome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download genome to temporary file - Case study # 1 — sc_faGenome","text":"character","code":""},{"path":"/reference/tx_add_endRatio1bpDS.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ends to coverage ratio 1bp down-stream — tx_add_endRatio1bpDS","title":"Add ends to coverage ratio 1bp down-stream — tx_add_endRatio1bpDS","text":"Add column DT read-ends coverage ratio, shifted 1 base-pair downstream. means last measurement gene always NA account measurement shifted.","code":""},{"path":"/reference/tx_add_endRatio1bpDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ends to coverage ratio 1bp down-stream — tx_add_endRatio1bpDS","text":"","code":"tx_add_endRatio1bpDS(DT, minCov = 50)"},{"path":"/reference/tx_add_endRatio1bpDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ends to coverage ratio 1bp down-stream — tx_add_endRatio1bpDS","text":"DT data.table. table output tx_makeDT_coverage() tx_makeDT_covNucFreq() functions. minCov numeric. Minimum coverage required output ratio. coverage less NA output position.","code":""},{"path":"/reference/tx_add_endRatio1bpDS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ends to coverage ratio 1bp down-stream — tx_add_endRatio1bpDS","text":"data.table","code":""},{"path":"/reference/tx_add_startRatio1bpUS.html","id":null,"dir":"Reference","previous_headings":"","what":"Add starts to coverage ratio 1 bp upstream — tx_add_startRatio1bpUS","title":"Add starts to coverage ratio 1 bp upstream — tx_add_startRatio1bpUS","text":"Add starts coverage ratio 1 bp upstream","code":""},{"path":"/reference/tx_add_startRatio1bpUS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add starts to coverage ratio 1 bp upstream — tx_add_startRatio1bpUS","text":"","code":"tx_add_startRatio1bpUS(DT, minCov = 50)"},{"path":"/reference/tx_add_startRatio1bpUS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add starts to coverage ratio 1 bp upstream — tx_add_startRatio1bpUS","text":"DT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. minCov numeric. Minimum coverage required output ratio. coverage less NA output position.","code":""},{"path":"/reference/tx_add_startRatio1bpUS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add starts to coverage ratio 1 bp upstream — tx_add_startRatio1bpUS","text":"data.table","code":""},{"path":"/reference/hlp_plot_metageneRegions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an extracted metaGeneMatrix — hlp_plot_metageneRegions","title":"Plot an extracted metaGeneMatrix — hlp_plot_metageneRegions","text":"plots extracted metagene matrix tx_get_metageneRegions(). Useful modifying metagene matrix, like filtering genes .","code":""},{"path":"/reference/hlp_plot_metageneRegions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an extracted metaGeneMatrix — hlp_plot_metageneRegions","text":"","code":"hlp_plot_metageneRegions(   metaGeneMatrix,   colVars,   nBins_5UTR,   nBins_CDS,   nBins_3UTR,   summ_fun = \"mean\",   smooth = TRUE,   spar = 0.5,   plot_type = \"lineplot\",   normalize = FALSE )"},{"path":"/reference/hlp_plot_metageneRegions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an extracted metaGeneMatrix — hlp_plot_metageneRegions","text":"metaGeneMatrix matrix. obtained tx_get_metageneRegions() colVars character. Names columns values extracted nBins_5UTR integer. Number bins allocate data 5'UTR regions nBins_CDS integer. Number bins allocate data CDS regions nBins_3UTR integer. Number bins allocate data 3'UTR regions summ_fun character. Summarizing function either \"sum\" \"mean\". Default: \"mean\" smooth logical. Set FALSE smoothing line. spar numeric. Smoothing parameter, typically (necessarily) (0,1]. plot_type character. Type plot output, either \"lineplot\" \"boxplot\". normalize logical. set TRUE, values normalized area bellow curve approximates 1 variable.","code":""},{"path":"/reference/hlp_plot_metageneRegions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an extracted metaGeneMatrix — hlp_plot_metageneRegions","text":"ggplot","code":""},{"path":"/reference/hlp_plot_metageneRegions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot an extracted metaGeneMatrix — hlp_plot_metageneRegions","text":"Note must nBins arguments ones used generate metagene matrix.","code":""},{"path":"/reference/tx_add_exonNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Add exon number — tx_add_exonNumber","title":"Add exon number — tx_add_exonNumber","text":"Add exon number","code":""},{"path":"/reference/tx_add_exonNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add exon number — tx_add_exonNumber","text":"","code":"tx_add_exonNumber(txDT, geneAnnot, nCores = 1)"},{"path":"/reference/tx_add_exonNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add exon number — tx_add_exonNumber","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. geneAnnot GRanges. Gene annotation loaded tx_load_bed(). nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_add_exonNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add exon number — tx_add_exonNumber","text":"data.table","code":""},{"path":"/reference/tx_add_exonPlace.html","id":null,"dir":"Reference","previous_headings":"","what":"Add exon place — tx_add_exonPlace","title":"Add exon place — tx_add_exonPlace","text":"Adds column specifying exon first, intermediate, last exon","code":""},{"path":"/reference/tx_add_exonPlace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add exon place — tx_add_exonPlace","text":"","code":"tx_add_exonPlace(txDT, geneAnnot, nCores = 1)"},{"path":"/reference/tx_add_exonPlace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add exon place — tx_add_exonPlace","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. geneAnnot GRanges. Gene annotation loaded tx_load_bed(). nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_add_exonPlace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add exon place — tx_add_exonPlace","text":"data.table","code":""},{"path":"/reference/tx_add_geneRegion.html","id":null,"dir":"Reference","previous_headings":"","what":"Add gene regions — tx_add_geneRegion","title":"Add gene regions — tx_add_geneRegion","text":"Add gene regions","code":""},{"path":"/reference/tx_add_geneRegion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add gene regions — tx_add_geneRegion","text":"","code":"tx_add_geneRegion(txDT, geneAnnot, nCores = 1)"},{"path":"/reference/tx_add_geneRegion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add gene regions — tx_add_geneRegion","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. geneAnnot GRanges. Gene annotation loaded tx_load_bed(). nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_add_geneRegion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add gene regions — tx_add_geneRegion","text":"data.table","code":""},{"path":"/reference/tx_add_relTxPos.html","id":null,"dir":"Reference","previous_headings":"","what":"Add relative position in transcript — tx_add_relTxPos","title":"Add relative position in transcript — tx_add_relTxPos","text":"Adds numeric variable represents relative position nucleotide along transcript scale 0 (start) 1 (end).","code":""},{"path":"/reference/tx_add_relTxPos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add relative position in transcript — tx_add_relTxPos","text":"","code":"tx_add_relTxPos(txDT, round_dig = 3)"},{"path":"/reference/tx_add_relTxPos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add relative position in transcript — tx_add_relTxPos","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. round_dig integer. Decimal places output round .","code":""},{"path":"/reference/tx_add_relTxPos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add relative position in transcript — tx_add_relTxPos","text":"data.table","code":""},{"path":"/reference/tx_cut_geneAnnotBytxDT.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut gene annotation by txDT's genes — tx_cut_geneAnnotBytxDT","title":"Cut gene annotation by txDT's genes — tx_cut_geneAnnotBytxDT","text":"Cut gene annotation txDT's genes","code":""},{"path":"/reference/tx_cut_geneAnnotBytxDT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut gene annotation by txDT's genes — tx_cut_geneAnnotBytxDT","text":"","code":"tx_cut_geneAnnotBytxDT(txDT, geneAnnot)"},{"path":"/reference/tx_cut_geneAnnotBytxDT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut gene annotation by txDT's genes — tx_cut_geneAnnotBytxDT","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. geneAnnot GRanges. Gene annotation loaded tx_load_bed()","code":""},{"path":"/reference/tx_cut_geneAnnotBytxDT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut gene annotation by txDT's genes — tx_cut_geneAnnotBytxDT","text":"data.table","code":""},{"path":"/reference/tx_get_metageneRegions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metagene regions — tx_get_metageneRegions","title":"Get metagene regions — tx_get_metageneRegions","text":"Summarizes values column(s) selected number bins per gene structure region (5'UTR, CDS, 3'UTR).","code":""},{"path":"/reference/tx_get_metageneRegions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metagene regions — tx_get_metageneRegions","text":"","code":"tx_get_metageneRegions(   txDT,   geneAnnot,   colVars,   nBins_5UTR,   nBins_CDS = NULL,   nBins_3UTR = NULL,   nCores = 1 )"},{"path":"/reference/tx_get_metageneRegions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metagene regions — tx_get_metageneRegions","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. geneAnnot GRanges. Gene annotation loaded tx_load_bed(). colVars character. Names columns values extracted nBins_5UTR integer. Number bins allocate data 5'UTR regions nBins_CDS integer. Number bins allocate data CDS regions nBins_3UTR integer. Number bins allocate data 3'UTR regions nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_get_metageneRegions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metagene regions — tx_get_metageneRegions","text":"list matrices colVar","code":""},{"path":"/reference/tx_plot_metageneExons.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot metagene exons — tx_plot_metageneExons","title":"Plot metagene exons — tx_plot_metageneExons","text":"Plot metagene exons","code":""},{"path":"/reference/tx_plot_metageneExons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot metagene exons — tx_plot_metageneExons","text":"","code":"tx_plot_metageneExons(   txDT,   colVars,   nBins,   geneAnnot = NULL,   nCores = 1,   summ_fun = \"mean\",   smooth = TRUE,   spar = 0.5,   plot_type = \"lineplot\",   xLabelJump = 10,   normalize = FALSE )"},{"path":"/reference/tx_plot_metageneExons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot metagene exons — tx_plot_metageneExons","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. colVars character. Names columns values extracted nBins integer. Number bins exon data allocated. geneAnnot GRanges. Gene annotation loaded tx_load_bed(). nCores integer. Number cores run function . summ_fun character. Summarizing function either \"sum\" \"mean\". Default: \"mean\". smooth logical. Set FALSE smoothing line. spar numeric. Smoothing parameter, typically (necessarily) (0,1]. plot_type character. Type plot output, either \"lineplot\" \"boxplot\". xLabelJump Number bins skipped label plotting normalize logical. set TRUE, values normalized area bellow curve approximates 1 variable.","code":""},{"path":"/reference/tx_plot_metageneExons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot metagene exons — tx_plot_metageneExons","text":"ggplot","code":""},{"path":"/reference/tx_plot_metageneRegions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot metagene by regions — tx_plot_metageneRegions","title":"Plot metagene by regions — tx_plot_metageneRegions","text":"Plot metagene regions","code":""},{"path":"/reference/tx_plot_metageneRegions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot metagene by regions — tx_plot_metageneRegions","text":"","code":"tx_plot_metageneRegions(   txDT,   geneAnnot,   colVars,   nBins_5UTR,   nBins_CDS = NULL,   nBins_3UTR = NULL,   summ_fun = \"mean\",   smooth = TRUE,   spar = 0.5,   nCores = 1,   plot_type = \"lineplot\",   normalize = FALSE )"},{"path":"/reference/tx_plot_metageneRegions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot metagene by regions — tx_plot_metageneRegions","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. geneAnnot GRanges. Gene annotation loaded tx_load_bed(). colVars character. Names columns values extracted nBins_5UTR integer. Number bins allocate data 5'UTR regions nBins_CDS integer. Number bins allocate data CDS regions nBins_3UTR integer. Number bins allocate data 3'UTR regions summ_fun character. Summarizing function either \"sum\" \"mean\". Default: \"mean\" smooth logical. Set FALSE smoothing line. spar numeric. Smoothing parameter, typically (necessarily) (0,1]. nCores integer. Number cores run function . Multicore capability available Windows OS. @param plot_type character. Type plot output, either \"lineplot\" \"boxplot\". plot_type character. Type plot output, either \"lineplot\" \"boxplot\". normalize logical. set TRUE, values normalized area bellow curve approximates 1 variable.","code":""},{"path":"/reference/tx_plot_metageneRegions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot metagene by regions — tx_plot_metageneRegions","text":"ggplot","code":""},{"path":"/reference/tx_sampleByGenes.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample txDT by genes — tx_sampleByGenes","title":"Sample txDT by genes — tx_sampleByGenes","text":"Sample txDT genes","code":""},{"path":"/reference/tx_sampleByGenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample txDT by genes — tx_sampleByGenes","text":"","code":"tx_sampleByGenes(txDT, size)"},{"path":"/reference/tx_sampleByGenes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample txDT by genes — tx_sampleByGenes","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. size number genes sampled","code":""},{"path":"/reference/tx_sampleByGenes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample txDT by genes — tx_sampleByGenes","text":"data.table","code":""},{"path":"/reference/tx_generatePairedEndFASTQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate paired-end FASTQ file — tx_generatePairedEndFASTQ","title":"Generate paired-end FASTQ file — tx_generatePairedEndFASTQ","text":"Simulates paired-end FASTQ files genome gene annotation. distribution reads randomly selected following negative binomial distribution.","code":""},{"path":"/reference/tx_generatePairedEndFASTQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate paired-end FASTQ file — tx_generatePairedEndFASTQ","text":"","code":"tx_generatePairedEndFASTQ(   genome,   geneAnnot,   readLen_1,   readLen_2,   insertSize,   libSize,   fileName_r1,   fileName_r2,   TPM = NULL,   NB_r = 5,   NB_mu = 500,   nCores )"},{"path":"/reference/tx_generatePairedEndFASTQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate paired-end FASTQ file — tx_generatePairedEndFASTQ","text":"genome list. full reference genome sequences, loaded tx_load_genome() prepackaged BSgenome, see ?BSgenome::available.genomes geneAnnot GRanges. Gene annotation loaded tx_load_bed(). readLen_1 integer. Length simulated reads1 readLen_2 integer. Length simulated reads2 insertSize integer. Length simulated insert (gap reads) libSize integer. Size simulated FASTQ file fileName_r1 character. Name output file reads1. fileName_r2 character. Name output file reads2. TPM numeric. Proportion reads per gene gene annotation. Overrides negative binomial distribution generation. NB_r numeric. Target r dispersion parameter. Bigger values r tend generate normal distribution. See ?stats::rnbinom() NB_mu numeric. Target mean resulting distribution nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_generatePairedEndFASTQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate paired-end FASTQ file — tx_generatePairedEndFASTQ","text":"Writes FASTQ files fileName_r1 fileName_r2","code":""},{"path":"/reference/tx_get_metageneExons.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metagene by exons — tx_get_metageneExons","title":"Get metagene by exons — tx_get_metageneExons","text":"Get metagene exons","code":""},{"path":"/reference/tx_get_metageneExons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metagene by exons — tx_get_metageneExons","text":"","code":"tx_get_metageneExons(   txDT,   colVars,   nBins,   geneAnnot = NULL,   rm_NArows = TRUE,   nCores = 1 )"},{"path":"/reference/tx_get_metageneExons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metagene by exons — tx_get_metageneExons","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. colVars character. Names columns values extracted nBins integer. Number bins exon data allocated. geneAnnot GRanges. Gene annotation loaded tx_load_bed(). rm_NArows logical. Remove rows final matrix consist NA values. nCores integer. Number cores run function . Multicore capability available Windows OS.","code":""},{"path":"/reference/tx_get_metageneExons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metagene by exons — tx_get_metageneExons","text":"list matrices colVar","code":""},{"path":"/reference/tx_get_unassignedAlignments.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve dumped alignments — tx_get_unassignedAlignments","title":"Retrieve dumped alignments — tx_get_unassignedAlignments","text":"Retrieve read mappings assigned gene tx_reads","code":""},{"path":"/reference/tx_get_unassignedAlignments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve dumped alignments — tx_get_unassignedAlignments","text":"","code":"tx_get_unassignedAlignments()"},{"path":"/reference/tx_get_unassignedAlignments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve dumped alignments — tx_get_unassignedAlignments","text":"GAlignments","code":""},{"path":"/reference/tx_plot_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Numeric plot — tx_plot_numeric","title":"Numeric plot — tx_plot_numeric","text":"Plot numeric variables txDT gene specified range","code":""},{"path":"/reference/tx_plot_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numeric plot — tx_plot_numeric","text":"","code":"tx_plot_numeric(   DT,   gene,   colVars,   txRange = 1:nrow(DT),   plot_type = \"lineplot\",   lwd = 1,   addPoints = TRUE,   scales = \"fixed\",   show_yLabels = TRUE,   showLegend = TRUE )"},{"path":"/reference/tx_plot_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numeric plot — tx_plot_numeric","text":"DT data.table. Input data generate plot gene character colVars character. Names columns values extracted txRange integer. Range data used, 'txcoor' column used delimit range data.table. plot_type character. Type plot output, either \"lineplot\" \"barplot\". lwd numeric. Width line (lineplot) addPoints logical. Add points line (lineplot) scales character. Scales y axis accordingly. Either 'fixed', default, 'free_y' (barplot) show_yLabels logical. set FALSE hides y axis labels. showLegend logical. set FALSE renger legend.","code":""},{"path":"/reference/tx_plot_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Numeric plot — tx_plot_numeric","text":"ggplot","code":""},{"path":"/reference/tx_plot_numeric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Numeric plot — tx_plot_numeric","text":"range exceeds 250 bp labels x-axis shown default unless force_xAxis set TRUE.","code":""},{"path":"/reference/tx_plot_numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Numeric plot — tx_plot_numeric","text":"","code":"# Barplot using data from the Use-case-#3 tx_plot_numeric(DT = sc_txDTL[[1]], gene = \"18s\", txRange = 100:150, colVars = c(\"start_5p\", \"end_3p\", \"cov\"), plot_type = \"barplot\", scales = \"free\")   # Lineplot using data from the Use-case-#3 tx_plot_numeric(DT = sc_txDTL[[1]], gene = \"18s\", txRange = 100:150, colVars = c(\"start_5p\", \"end_3p\", \"cov\"), plot_type = \"lineplot\")"},{"path":"/reference/txCoreCols.html","id":null,"dir":"Reference","previous_headings":"","what":"txtools' core cols — txCoreCols","title":"txtools' core cols — txCoreCols","text":"txtools' core column names","code":""},{"path":"/reference/txCoreCols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"txtools' core cols — txCoreCols","text":"","code":"txCoreCols"},{"path":"/reference/txCoreCols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"txtools' core cols — txCoreCols","text":"character","code":""},{"path":"/reference/txCoreCols_refSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"txtools' core cols and refSeq — txCoreCols_refSeq","title":"txtools' core cols and refSeq — txCoreCols_refSeq","text":"txtools' core column names including refSeq","code":""},{"path":"/reference/txCoreCols_refSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"txtools' core cols and refSeq — txCoreCols_refSeq","text":"","code":"txCoreCols_refSeq"},{"path":"/reference/txCoreCols_refSeq.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"txtools' core cols and refSeq — txCoreCols_refSeq","text":"character","code":""},{"path":"/reference/tx_plot_metaGeneByBins.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot metagene by bins — tx_plot_metaGeneByBins","title":"Plot metagene by bins — tx_plot_metaGeneByBins","text":"Plot metagene bins","code":""},{"path":"/reference/tx_plot_metaGeneByBins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot metagene by bins — tx_plot_metaGeneByBins","text":"","code":"tx_plot_metaGeneByBins(   txDT,   colName,   nBins = 100,   FUN = \"mean\",   minTxLength = 300,   smooth = TRUE,   na.rm = TRUE )"},{"path":"/reference/tx_plot_metaGeneByBins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot metagene by bins — tx_plot_metaGeneByBins","text":"txDT data.table. table output tx_makeDT_coverage(), tx_makeDT_nucFreq() tx_makeDT_covNucFreq() functions. colName character. Name column numeric (logical) class plot nBins integer. Number bins divide gene FUN character. Function used summarize values across bins genes. minTxLength integer. Minimum transcript length included analysis. smooth logical. Set FALSE smoothing line. na.rm logical. Remove NA values computations, default TRUE.","code":""},{"path":"/reference/tx_plot_metaGeneByBins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot metagene by bins — tx_plot_metaGeneByBins","text":"ggplot","code":""},{"path":"/articles/txtools.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"txtools User Guide","text":"following quick -depth tutorial showing txtools ‘core’ functions. show : Load read-alignments data, genomic transcriptomic reference files R. Assign alignments genes. Summarize mapped-reads different kinds tables. Use tx_add_* functions add useful data calculated metrics summarized tables. Plot regions analyses results using tx_plot_* functions family. Use tx_get_*() functions extract non-standard information structures txtools tables. Use tx_test_*() functions apply statiscal testing detect transcriptomics positions unexpected values either continuous count data variables. aim txtools provide versatile framework analyze transcriptomic data simple manner. accomplish propose processing data two stages: Transfer read-alignments genomic transcriptomic coordinates space. Summarize transcriptomic-alignments table structures. intermediate output Step 1 class GRanges GenomicRanges package, Step 2, final output main txtools processing pipeline, class data.table data.table package, extension data.frame class. Current txtools development favored functionality common table structure, offers extendability versatility price big memory allocation. considered developing analysis pipelines using txtools. Users benefit benefit using whole transcriptome early development stages, unless necessary, instead use subset gene annotation developing analysis pipeline late stages run complete transcriptome. example use data pasillaBamSubset package. subset reads aligned chromosome 4 D. melanogaster.","code":"library(txtools) library(pasillaBamSubset)"},{"path":"/articles/txtools.html","id":"loading-data-tx_load_","dir":"Articles","previous_headings":"","what":"Loading data tx_load_*()","title":"txtools User Guide","text":"work reads transcriptomic space, txtools requires Gene Annotation file form BED-12 BED-6 file, loaded tx_load_bed(). Importantly, BED-12 file contains information construct exon structure, using BED-6 file, txtools assume genes annotation consist single exon block. Additionally, recommended Reference Genome sequence file form FASTA file, entry corresponds chromosome, loaded tx_load_genome(). main data work process using txtools read mappings, read alignments, form BAM files. files can loaded R using tx_load_bam(). case set pairedEnd argument TRUE, specify library paired-end; use sequence information alignments need set loadSeq argument also TRUE. three functions make loading necessary input data painless process.","code":"BED_path <- tx_dm3_geneAnnot() # geneAnnot built-in txtools geneAnnot <- tx_load_bed(BED_path) FASTA_path <- pasillaBamSubset::dm3_chr4() # D. melanogaster chr4 built-in pasillaBamSubset genome <- tx_load_genome(fastaFile = FASTA_path) BAM_path <- pasillaBamSubset::untreated3_chr4() # Paired-end BAM file built-in pasillaBamSubset genAligns <- tx_load_bam(file = BAM_path, pairedEnd = TRUE, loadSeq = TRUE) #> Reading number of records in file  #> 175346 number of BAM records  #> Loading BAM file  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #> 0 reads filtered out for empty sequence field  #> 75409 Reads succesfully loaded  #> Dumped ambiguous reads: 0"},{"path":"/articles/txtools.html","id":"assigning-alignments-to-genes-tx_reads","dir":"Articles","previous_headings":"","what":"Assigning alignments to genes tx_reads()","title":"txtools User Guide","text":"Reads mapped reference genome assigned processed genes. done using tx_reads(). tx_reads() accepts bam files loaded tx_load_bam() recognizing paired-end single-end libraries. Additionally required provide gene-annotation loaded tx_load_bed(). default tx_reads() process genes 50 reads, output processed sequence read, use one core; options can changed arguments. retrieve genomic reads assigned gene, due outside gene annotation, can use tx_getUnassignedAlignments(). Background GenomicRanges package necessary examination manipulation assigned reads toy example reads mapped used gene annotation ten genes assigning reads. resulting object txReads comprises list GRanges, genomic ranges name, consist ranges mapped reads transcriptomic space, genomic space.","code":"txReads <- tx_reads(genAligns, geneAnnot = geneAnnot, minReads = 1, withSeq = TRUE) #> Warning in rmAmbigStrandAligns(reads): Removing 63 alignments with ambiguous strand (*) #> Processing 75346 reads, using 10 gene models.  #> 10373 alignments overlap 10 gene models  #> Assigning alignments to gene model...  #> Processing sequences. This may take several minutes depending on geneAnnot size ...  #> Output contains: 7176 unique alignments in 10 gene models #> Warning in tx_reads(genAligns, geneAnnot = geneAnnot, minReads = 1, withSeq = #> TRUE): Some alignments were not assigned to any gene, you can retrieve them #> using the tx_get_unassignedAlignments() function. tx_getUnassignedAlignments() #> Warning: `tx_getUnassignedAlignments()` was deprecated in txtools 1.0.0. #> ℹ Please use `tx_get_unassignedAlignments()` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. #> GAlignmentPairs object with 68170 pairs, strandMode=1, and 0 metadata columns: #>                     seqnames strand   :          ranges  --          ranges #>                        <Rle>  <Rle>   :       <IRanges>  --       <IRanges> #>   SRR031715.1138209     chr4      +   :         169-205  --         326-362 #>    SRR031714.756385     chr4      +   :         943-979  --       1086-1122 #>   SRR031714.2355189     chr4      +   :         944-980  --       1119-1155 #>   SRR031714.5054563     chr4      +   :         946-982  --        986-1022 #>   SRR031715.1722593     chr4      +   :        966-1002  --       1108-1144 #>                 ...      ...    ... ...             ... ...             ... #>   SRR031714.2561111     chr4      -   : 1348209-1348245  -- 1348063-1348099 #>   SRR031715.2322156     chr4      -   : 1348211-1348247  -- 1348077-1348113 #>   SRR031715.2887514     chr4      +   : 1348217-1348253  -- 1348215-1348251 #>   SRR031714.1650928     chr4      +   : 1349196-1349232  -- 1349326-1349362 #>   SRR031714.1650928     chr4      +   : 1349708-1349744  -- 1349838-1349874 #>   ------- #>   seqinfo: 8 sequences from an unspecified genome"},{"path":"/articles/txtools.html","id":"summarizing-reads-into-a-txdt-tx_makedt_","dir":"Articles","previous_headings":"","what":"Summarizing reads into a txDT tx_makeDT_*()","title":"txtools User Guide","text":"consolidating paired-end reads, assigning respective genes converting ranges transcriptomic space, can summarize data table format. tables contain data coverage, nucleotide frequency counts; rows table corresponds nucleotide position unique transcriptome, duplicated genomic coordinate, case overlapping genes. default R base uses class object data.frame accomodate table data structures contain different classes data per column. case txtools opted use class object data.table eponymous package, data.table object operates similar base-R’s data.frames yet optimized speedier calculations assignment. three functions generate summarized txDTs, containing summarized data per nucleotide position transcriptome: tx_makeDT_coverage(): Generates table coverage, read-starts, read-ends counts data. tx_makeDT_nucFreq(): Generates table nucleotide frequencies four main aminoacids, unidentified nucleotide (N), deletions (-), insert counts (.). latter generated using paired-end reads didn’t overlap , unidentified sequence Read1 Read2. tx_makeDT_covNucFreq(): Generates table columns two previous functions. three tables contain 5 columns identify transcriptomic position link respective genomic position well: chr: Chromosome gencoor: Genomic coordinate strand: Genomic strand gene: Gene name txcoor: Transcriptomic coordinate, relative coordinate transcript. txcoor includes UTR regions present, .e. first nucleotide 5’UTR  considered position “1”. Additionally, functions genome argument input corresponding reference genome sequence, nucleotide identity per position added column refSeq. Note: reason summarized tables shouldn’t generated genomic space complex genes, human, long introns  generate long sparse tables, yet heavy terms memory allocation.*","code":"DT_cov <- tx_makeDT_coverage(txReads, geneAnnot = geneAnnot) DT_cov #>         chr gencoor strand         gene txcoor cov start_5p end_3p #>     1: chr4  150475      - NM_001169348      1   0        0      0 #>     2: chr4  150474      - NM_001169348      2   0        0      0 #>     3: chr4  150473      - NM_001169348      3   0        0      0 #>     4: chr4  150472      - NM_001169348      4   0        0      0 #>     5: chr4  150471      - NM_001169348      5   0        0      0 #>    ---                                                             #> 42061: chr4 1133504      - NM_001297793   6073   0        0      0 #> 42062: chr4 1133503      - NM_001297793   6074   0        0      0 #> 42063: chr4 1133502      - NM_001297793   6075   0        0      0 #> 42064: chr4 1133501      - NM_001297793   6076   0        0      0 #> 42065: chr4 1133500      - NM_001297793   6077   0        0      0 DT_nucFreq <- tx_makeDT_nucFreq(txReads, geneAnnot = geneAnnot) DT_nucFreq #>         chr gencoor strand         gene txcoor A C G T N - . #>     1: chr4  150475      - NM_001169348      1 0 0 0 0 0 0 0 #>     2: chr4  150474      - NM_001169348      2 0 0 0 0 0 0 0 #>     3: chr4  150473      - NM_001169348      3 0 0 0 0 0 0 0 #>     4: chr4  150472      - NM_001169348      4 0 0 0 0 0 0 0 #>     5: chr4  150471      - NM_001169348      5 0 0 0 0 0 0 0 #>    ---                                                       #> 42061: chr4 1133504      - NM_001297793   6073 0 0 0 0 0 0 0 #> 42062: chr4 1133503      - NM_001297793   6074 0 0 0 0 0 0 0 #> 42063: chr4 1133502      - NM_001297793   6075 0 0 0 0 0 0 0 #> 42064: chr4 1133501      - NM_001297793   6076 0 0 0 0 0 0 0 #> 42065: chr4 1133500      - NM_001297793   6077 0 0 0 0 0 0 0 DT_covNucFreq <- tx_makeDT_covNucFreq(txReads, geneAnnot = geneAnnot) DT_covNucFreq <- tx_makeDT_covNucFreq(txReads, geneAnnot = geneAnnot, genome = genome)  DT_covNucFreq #>         chr gencoor strand         gene txcoor refSeq cov start_5p end_3p A C G #>     1: chr4  150475      - NM_001169348      1      C   0        0      0 0 0 0 #>     2: chr4  150474      - NM_001169348      2      T   0        0      0 0 0 0 #>     3: chr4  150473      - NM_001169348      3      T   0        0      0 0 0 0 #>     4: chr4  150472      - NM_001169348      4      T   0        0      0 0 0 0 #>     5: chr4  150471      - NM_001169348      5      A   0        0      0 0 0 0 #>    ---                                                                          #> 42061: chr4 1133504      - NM_001297793   6073      A   0        0      0 0 0 0 #> 42062: chr4 1133503      - NM_001297793   6074      A   0        0      0 0 0 0 #> 42063: chr4 1133502      - NM_001297793   6075      T   0        0      0 0 0 0 #> 42064: chr4 1133501      - NM_001297793   6076      T   0        0      0 0 0 0 #> 42065: chr4 1133500      - NM_001297793   6077      C   0        0      0 0 0 0 #>        T N - . #>     1: 0 0 0 0 #>     2: 0 0 0 0 #>     3: 0 0 0 0 #>     4: 0 0 0 0 #>     5: 0 0 0 0 #>    ---         #> 42061: 0 0 0 0 #> 42062: 0 0 0 0 #> 42063: 0 0 0 0 #> 42064: 0 0 0 0 #> 42065: 0 0 0 0"},{"path":"/articles/txtools.html","id":"adding-useful-data-and-metrics-to-txdts-tx_add_","dir":"Articles","previous_headings":"","what":"Adding useful data and metrics to txDTs tx_add_*()","title":"txtools User Guide","text":"generating txDT already information need count data analysis. Yet, sometimes need data metrics ratios, consider example ratio read-starts compared coverage, call read-start ratio simply startRatio. manually calculate startRatio dividing start_5p column cov column txDT. Yet metrics limits genes important calculated, e.g. startRatio 1bp upstream. easily calculate different metrics add additional information txDT provide set functions start tx_add_ prefix.","code":""},{"path":"/articles/txtools.html","id":"adding-metrics-related-to-read-starts-read-ends-coverage-and-nucleotide-frequency-","dir":"Articles","previous_headings":"Adding useful data and metrics to txDTs tx_add_*()","what":"Adding metrics related to read-starts, read-ends, coverage, and nucleotide frequency.","title":"txtools User Guide","text":"Additional counts coverage (cov), read-starts (start_5p), read-ends (end_3p), nucleotide frequencies (, T, C, G) nucleotide transcriptome, can useful add certain related metrics. example rate reads start compared coverage, call startRatio. create common metrics provide several functions tx_add_*() functions family. Bellow list brief description add. tx_add_startRatio(): Start coverage rate tx_add_startRatio1bpDS(): Start coverage rate 1 bp -stream tx_add_startRatio1bpUS(): Start coverage rate 1 bp -stream tx_add_endRatio(): End coverage rate tx_add_endRatio1bpDS(): End coverage rate 1 bp -stream tx_add_endRatio1bpUS(): End coverage rate 1 bp -stream tx_add_nucTotal(): Sum nucleotide frequencies, counting undetermined ‘N’ inserts ‘.’. tx_add_misincCount(): Sum nucleotide reads different reference sequence. tx_add_misincRate(): Rate nucleotide reads different reference sequence. tx_add_misincRateNucSpec(): Rate misincorporation specific nucleotide respect reference nucleotide. e.g. rate ‘T’ incorporated (misread) RNA instead ‘C’. tx_add_geneRegion(): Adds gene region positions correspond: 5’UTR, CDS, 3’UTR, non-coding. result using tx_add_() function txDT input difference new column desired metric, hence possible chain tx_add functions succession pipe operator %>% **magrittr* package.*","code":"library(\"magrittr\") DT_covNucFreq <- DT_covNucFreq %>%      tx_add_startRatio() %>%      tx_add_startRatio1bpDS() %>%      tx_add_startRatio1bpUS() %>%      tx_add_endRatio() %>%      tx_add_endRatio1bpDS() %>%      tx_add_endRatio1bpUS() %>%      tx_add_nucTotal() %>%      tx_add_misincCount() %>%      tx_add_misincRate() %>%      tx_add_misincRateNucSpec(refNuc = \"C\", misNuc = \"T\") %>%      tx_add_geneRegion(geneAnnot = geneAnnot)"},{"path":"/articles/txtools.html","id":"adding-unique-position-identifier","dir":"Articles","previous_headings":"Adding useful data and metrics to txDTs tx_add_*()","what":"Adding unique position identifier","title":"txtools User Guide","text":"needed, combining gene relative coordinate can create single unique identifier position transcriptome. can add tx_add_pos(). IMPORTANT NOTE: Due unique identifiers pos column character class requires big amount memory allocated.  needed recommended omit pos column delete longer needed.","code":"DT_covNucFreq <- tx_add_pos(DT_covNucFreq)"},{"path":"/articles/txtools.html","id":"adding-reference-sequence","dir":"Articles","previous_headings":"Adding useful data and metrics to txDTs tx_add_*()","what":"Adding reference sequence","title":"txtools User Guide","text":"genome sequence specified tx_makeDT_*() function call, adding transcriptomic reference sequence generating txDT possible tx_add_refSeqDT(). Importantly, sequence refSeq already processed represent transcriptomic sequence considering strand gene. Note: Importantly, nucleotide uracil represented letter “T” instead letter “U”. might change future versions  poses conflict confusion users.","code":"DT_covNucFreq <- tx_add_refSeqDT(DT_covNucFreq, genome = genome, geneAnnot = geneAnnot)"},{"path":"/articles/txtools.html","id":"adding-sites-annotation","dir":"Articles","previous_headings":"Adding useful data and metrics to txDTs tx_add_*()","what":"Adding sites annotation","title":"txtools User Guide","text":"Sometimes want identify previously annotated positions transcriptome data. , can use tx_add_siteAnnotation() add logical vector indicates sites interest perform analysis plotting. add sites annotation need input GRanges object consists ranges length 1, can also loaded tx_load_bed(). use -built site annotation object annotSites_RRACH contains 636 sites fall arbitrarily selected RRACH motif. visualize effect annotating RRACH sites seqlogo plot section @ref(ggseqlogo-plot)","code":"DT_covNucFreq <- tx_add_siteAnnotation(DT_covNucFreq, GRanges = annotSites_RRACH, colName = \"annotSites\")"},{"path":"/articles/txtools.html","id":"adding-sequence-motif-presence","dir":"Articles","previous_headings":"Adding useful data and metrics to txDTs tx_add_*()","what":"Adding sequence motif presence","title":"txtools User Guide","text":"mark positions specific sequences appear transcripts txDT can use tx_add_motifPresence(). Importantly, function take character string can consist characters IUPAC nucleotide ambiguity code","code":"DT_covNucFreq <- tx_add_motifPresence(DT_covNucFreq, motif = \"DRACH\", nucPositions = \"center\")"},{"path":"/articles/txtools.html","id":"adding-rolling-mean","dir":"Articles","previous_headings":"Adding useful data and metrics to txDTs tx_add_*()","what":"Adding rolling mean","title":"txtools User Guide","text":"Sometime need smoother version metric, can acomplished computing roll mean across moving window. example can smooth coverage applying rolling mean across cov column. winSize argument determines length window mean calculatates align.","code":"DT_covNucFreq <- tx_add_rollingMean(DT_covNucFreq, colName = \"cov\", winSize = 50, align = \"left\")"},{"path":"/articles/txtools.html","id":"plotting-functions-tx_plot_","dir":"Articles","previous_headings":"","what":"Plotting functions tx_plot_*()","title":"txtools User Guide","text":"txtools provides diverse set functions plot. ease use start prefix tx_plot_","code":""},{"path":"/articles/txtools.html","id":"start-end-coverage-plot","dir":"Articles","previous_headings":"Plotting functions tx_plot_*()","what":"Start End Coverage plot","title":"txtools User Guide","text":"tx_plot_staEndCov(): plot useful visualize coverage, read-start, read-end patterns. required input txDT, gene, transcriptomic range plot. can used plot whole gene bellow:  part gene specifying relative coordinates range txRange argument.","code":"tx_plot_staEndCov(DT_covNucFreq, gene = \"NM_001272152\", show_yLabels = FALSE, bar_border = FALSE) tx_plot_staEndCov(DT_covNucFreq, gene = \"NM_001272152\", txRange = 330:360)"},{"path":"/articles/txtools.html","id":"nucleotide-frequency-plot","dir":"Articles","previous_headings":"Plotting functions tx_plot_*()","what":"Nucleotide frequency plot","title":"txtools User Guide","text":"tx_plot_nucFreq(): plot shows nucleotide frequency importantly, shows color nucleotides matching reference sequence. useful visualize misincorporation rate, can originated due SNP, chemical treatment RNA (less informative) sequencing errors. Importantly, plot show coverage due inserts, assigned nucleotide identity, unsequenced gap read1 read2 paired-end libraries","code":"selSite <- DT_covNucFreq[which(misincRate > 0.5 & nucTotal > 40),                          c(\"gene\", \"txcoor\", \"cov\", \"nucTotal\", \"misincCount\", \"misincRate\")] selSite #>         gene txcoor cov nucTotal misincCount misincRate #> 1: NM_079901   3803  90       46          46          1 tx_plot_nucFreq(DT_covNucFreq, gene = selSite$gene, txRange = window_around(selSite$txcoor, 20), removeInsert = T)"},{"path":"/articles/txtools.html","id":"ggseqlogo-plot","dir":"Articles","previous_headings":"Plotting functions tx_plot_*()","what":"ggseqlogo plot","title":"txtools User Guide","text":"tx_plot_ggseqlogo(): function allows quickly plot ggseqlogo using input txDT logical annotation marks center position plot. useful identify motif sequences sites selected, example passing certain thresholds specific metrics. example use sites annotated using tx_add_motifPresence() annotating DRACH motifs small transcriptome set.","code":"tx_plot_ggseqlogo(DT_covNucFreq, logi_col = \"DRACH_motif_center\", upFlank = 5, doFlank = 5) #> Warning in tx_get_flankSequence(DT = DT, logi_col = logi_col, upFlank = #> upFlank, : Some sequences reached the end of transcript, a '.' was added in #> place, which may affect downstream results. #> Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as #> of ggplot2 3.3.4. #> ℹ The deprecated feature was likely used in the ggseqlogo package. #>   Please report the issue at <https://github.com/omarwagih/ggseqlogo/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"/articles/txtools.html","id":"metagene-plot-at-cds-startend","dir":"Articles","previous_headings":"Plotting functions tx_plot_*()","what":"Metagene plot at CDS start/end","title":"txtools User Guide","text":"tx_plot_metageneAtCDS(): Calculates plots metagenes using input txDT column names metrics plot.","code":"tx_plot_metageneAtCDS(txDT = DT_covNucFreq, geneAnnot = geneAnnot,                       colVars = c(\"A\", \"G\", \"C\", \"T\"), CDS_align = \"spliceSite\",                        upFlank = 200, doFlank = 200) tx_plot_metageneAtCDS(txDT = DT_covNucFreq, geneAnnot = geneAnnot,                       colVars = c(\"cov\", \"nucTotal\"), CDS_align = \"spliceSite\",                        upFlank = 100, doFlank = 100) tx_plot_metageneExons(txDT = DT_covNucFreq, colVars = c(\"A\", \"T\", \"G\", \"C\"), nBins = 30, geneAnnot = geneAnnot) #> Warning in tx_get_metageneExons(txDT = txDT, colVars = colVars, nBins = nBins, #> : exonNumber is needed in txDT to extract exons, this function calculates it #> but discards it everytime. If you want to keep them please add it to the txDT #> by using tx_add_exonNumber() tx_plot_metageneRegions(txDT = DT_covNucFreq, colVars = c(\"cov\", \"nucTotal\"),                         geneAnnot = geneAnnot, nBins_5UTR = 40, nBins_CDS = 80,                         nBins_3UTR = 80, summ_fun = \"mean\") #> Running using 1 core. #>  Consider increasing the  'nCores' argument if function takes too long"},{"path":[]},{"path":"/articles/txtools.html","id":"get-flanks-from-annotation","dir":"Articles","previous_headings":"Get functions tx_get_*()","what":"Get flanks from annotation","title":"txtools User Guide","text":"tx_get_flanksFromLogicAnnot(): Extracts surrounding values annotates sites column. required input txDT containing column values extracted alogn logical vector marking annotated sites (TRUE = site interest, FALSE = annotated site). output matrix rows correspond annoted sites, columns values positions -stream, center, -stream site interest. Getting values may useful confirm results derived previous analysis, generate aggregated analysis sites interest. Bellow example extract coverage sites annotated DRACH_motif_center column.","code":"tx_get_flanksFromLogicAnnot(DT_covNucFreq, logi_col = \"DRACH_motif_center\",                              values_col = \"cov\", upFlank = 4, doFlank = 4) %>% head(5)  #>                  -4 bp -3 bp -2 bp -1 bp DRACH_motif_center 1 bp 2 bp 3 bp 4 bp #> NM_001169348:97     10    10    10    10                 10   12   12   12   12 #> NM_001169348:108    12    12    12    12                 12   13   13   13   13 #> NM_001169348:120    15    15    15    15                 15   15   15   15   16 #> NM_001169348:148    17    17    17    17                 17   17   17   17   17 #> NM_001169348:170    17    17    17    17                 17   17   17   17   18"},{"path":"/articles/txtools.html","id":"getting-flanking-sequences","dir":"Articles","previous_headings":"Get functions tx_get_*()","what":"Getting flanking sequences","title":"txtools User Guide","text":"tx_get_flankSequence(): Extracts contiguous sequence sites interest. Works similarly tx_get_flanksFromLogicAnnot() specific case getting sequences collapsed format. output character vector element sequence site interest upstream downstream flanking regions. Bellow example showing flanking sequence sites annotated DRACH_morif_center column.","code":"tx_get_flankSequence(DT_covNucFreq, logi_col = \"DRACH_motif_center\",                       upFlank = 4, doFlank = 4) %>% head(5)  #> Warning in tx_get_flankSequence(DT_covNucFreq, logi_col = \"DRACH_motif_center\", #> : Some sequences reached the end of transcript, a '.' was added in place, which #> may affect downstream results. #> [1] \"GAGAACAAA\" \"ACAAACAAG\" \"TGAAACCTG\" \"TTAGACAAC\" \"TAAAACAGA\""},{"path":"/articles/txtools.html","id":"get-gene-lengths","dir":"Articles","previous_headings":"Get functions tx_get_*()","what":"Get gene lengths","title":"txtools User Guide","text":"tx_get_geneLengths: Gets length genes contained txDT, measured number positions (rows) gene table.","code":"tx_get_geneLengths(DT_covNucFreq) #> NM_001169348 NM_001272124 NM_001272152 NM_001297793    NM_079901    NM_143656  #>         5777         3965         2026         6077         5576         2557  #>    NM_143665    NM_166736    NM_166777    NM_166788  #>         5357         3050         4068         3612"},{"path":"/articles/txtools.html","id":"get-metagene-values","dir":"Articles","previous_headings":"Get functions tx_get_*()","what":"Get metagene values","title":"txtools User Guide","text":"tx_get_metageneAtCDS(): Gets metagene profile desired column variables, centered either start end CDS. Bellow example retrieve values coverage start CDS well upstream downstream flanks.","code":"tx_get_metageneAtCDS(txDT = DT_covNucFreq, geneAnnot = geneAnnot,                       colVars = c(\"cov\", \"nucTotal\"), CDS_align = \"start\",                        upFlank = 3, doFlank = 5) #> $cov #>                  -3 bp -2 bp -1 bp CDS_start 1 bp 2 bp 3 bp 4 bp 5 bp #> NM_001169348:69      3     3     3         3    3    3    3    3    4 #> NM_166736:419        4     4     4         4    4    4    4    4    4 #> NM_143656:186        0     0     0         0    0    0    0    0    0 #> NM_001272124:60      2     2     2         2    2    2    2    2    2 #> NM_143665:519       17    17    17        17   17   17   17   17   17 #> NM_166777:357        1     1     1         1    1    1    1    1    1 #> NM_166788:511        7     7     7         7    7    7    7    7    7 #> NM_079901:381       65    65    65        66   66   68   69   68   68 #> NM_001272152:347    75    76    77        77   77  112  115  115  118 #> NM_001297793:188     3     3     3         3    3    3    3    3    3 #>  #> $nucTotal #>                  -3 bp -2 bp -1 bp CDS_start 1 bp 2 bp 3 bp 4 bp 5 bp #> NM_001169348:69      3     3     3         3    3    3    3    3    4 #> NM_166736:419        2     2     2         2    2    2    2    2    2 #> NM_143656:186        0     0     0         0    0    0    0    0    0 #> NM_001272124:60      2     2     2         2    2    2    2    2    2 #> NM_143665:519        5     5     5         6    6    6    7    7    7 #> NM_166777:357        1     1     1         1    1    1    1    1    1 #> NM_166788:511        5     5     5         5    5    5    5    5    5 #> NM_079901:381       11    11    11        12   12   14   15   14   14 #> NM_001272152:347    75    76    77        77   77  111  114  114  117 #> NM_001297793:188     3     3     3         3    3    2    2    2    2"},{"path":"/articles/txtools.html","id":"get-transcriptome-sequences","dir":"Articles","previous_headings":"Get functions tx_get_*()","what":"Get transcriptome sequences","title":"txtools User Guide","text":"tx_get_transcriptSeqs(): Retrieves spliced sequence genes. Using input reference genome gene annotation loaded tx_load_bed(). output function can either DNAStringSet Biostrings package, (providing file name) FASTA file. Bellow example showing sequences genes D. melanogaster gene annotation, DNAStringSet output.","code":"tx_get_transcriptSeqs(genome = genome, geneAnnot = geneAnnot) #> DNAStringSet object of length 10: #>      width seq                                              names                #>  [1]  5777 CTTTATAATAATGCAACAGCAGC...CCCCACCGATCTCCCTACCCGG NM_001169348 #>  [2]  3050 ACTAAGTAAGTTACTTTTCTATT...GAAATAAAAGGTACACTTAAAT NM_166736 #>  [3]  2557 ATTCGAAGTATATTCTTTATGGG...ATATGCAATTGTTTCACCTGCC NM_143656 #>  [4]  3965 GCACTGTTGATTTTGGTTTATTT...AAAGTTTAATCAAAAAAATATC NM_001272124 #>  [5]  5357 ATTTGGTTTGTTCGAATTATCGC...ATTCTTCCATATAAAGGTAATG NM_143665 #>  [6]  4068 TTAATGACGTTATAAAAGTTATC...GCGGTATTCCGGCCTAAATCAT NM_166777 #>  [7]  3612 TGCTTTCAGTTCTACTTCGTCGC...AAACTCATAATGTCAACCCCCC NM_166788 #>  [8]  5576 AAATGCAACTCTGTTCGTATGAA...CATATGTAAAATAAAGCGAACC NM_079901 #>  [9]  2026 ATTTTTTGTCATATATTTTCCAA...ACCTATTTAAACATTACGGTAT NM_001272152 #> [10]  6077 ATTCATATATACTAATGTAATAC...CTGCTCACACGACTTCGAATTC NM_001297793"},{"path":"/articles/txtools.html","id":"statistical-tests-tx_test_","dir":"Articles","previous_headings":"","what":"Statistical tests tx_test_*()","title":"txtools User Guide","text":"txtools provides two functions perform statistical tests detect sites show unexpected values site treatment group compared control group. t test: case comparing continuous variables t-test can show unlikeliness groups mean. e.g. whe comparing start coverage rate. Likelihood Ratio test (edgeR package): comparing count data type trial success groups, example comparing start coverage ratio directly count data, considering coverage counts number trials number read-starts successes. functions require main input list txDTs (txDTL), txDT representing sample experimental design. examples usage tx_test functions, please consult case studies vignette available : [PENDING URL]","code":""},{"path":"/articles/txtools.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"txtools User Guide","text":"","code":"#> R version 4.3.1 (2023-06-16 ucrt) #> Platform: x86_64-w64-mingw32/x64 (64-bit) #> Running under: Windows 10 x64 (build 19045) #>  #> Matrix products: default #>  #>  #> locale: #> [1] LC_COLLATE=English_United States.utf8  #> [2] LC_CTYPE=English_United States.utf8    #> [3] LC_MONETARY=English_United States.utf8 #> [4] LC_NUMERIC=C                           #> [5] LC_TIME=English_United States.utf8     #>  #> time zone: America/Mexico_City #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] pasillaBamSubset_0.38.0 BiocStyle_2.28.1        txtools_1.0.2           #> [4] testthat_3.2.1          devtools_2.4.5          usethis_2.2.2           #> [7] magrittr_2.0.3          #>  #> loaded via a namespace (and not attached): #>   [1] rstudioapi_0.15.0           jsonlite_1.8.7              #>   [3] farver_2.1.1                rmarkdown_2.25              #>   [5] fs_1.6.3                    BiocIO_1.10.0               #>   [7] zlibbioc_1.46.0             ragg_1.2.7                  #>   [9] vctrs_0.6.3                 memoise_2.0.1               #>  [11] Rsamtools_2.16.0            RCurl_1.98-1.12             #>  [13] RcppRoll_0.3.0              htmltools_0.5.7             #>  [15] S4Arrays_1.2.0              forcats_1.0.0               #>  [17] sass_0.4.7                  bslib_0.5.1                 #>  [19] htmlwidgets_1.6.4           desc_1.4.3                  #>  [21] cachem_1.0.8                GenomicAlignments_1.36.0    #>  [23] mime_0.12                   lifecycle_1.0.3             #>  [25] pkgconfig_2.0.3             Matrix_1.6-1.1              #>  [27] R6_2.5.1                    fastmap_1.1.1               #>  [29] GenomeInfoDbData_1.2.10     MatrixGenerics_1.12.3       #>  [31] shiny_1.8.0                 digest_0.6.33               #>  [33] colorspace_2.1-0            AnnotationDbi_1.62.2        #>  [35] S4Vectors_0.38.2            rprojroot_2.0.4             #>  [37] pkgload_1.3.4               textshaping_0.3.7           #>  [39] GenomicRanges_1.52.0        RSQLite_2.3.1               #>  [41] labeling_0.4.3              fansi_1.0.4                 #>  [43] httr_1.4.7                  abind_1.4-5                 #>  [45] compiler_4.3.1              remotes_2.4.2.1             #>  [47] bit64_4.0.5                 withr_2.5.0                 #>  [49] BiocParallel_1.34.2         DBI_1.1.3                   #>  [51] pkgbuild_1.4.3              DelayedArray_0.26.7         #>  [53] sessioninfo_1.2.2           rjson_0.2.21                #>  [55] tools_4.3.1                 httpuv_1.6.13               #>  [57] ggseqlogo_0.1               glue_1.6.2                  #>  [59] restfulr_0.0.15             promises_1.2.1              #>  [61] grid_4.3.1                  generics_0.1.3              #>  [63] gtable_0.3.4                tidyr_1.3.0                 #>  [65] data.table_1.14.8           utf8_1.2.3                  #>  [67] XVector_0.40.0              BiocGenerics_0.46.0         #>  [69] pillar_1.9.0                stringr_1.5.0               #>  [71] limma_3.56.2                genefilter_1.82.1           #>  [73] later_1.3.2                 splines_4.3.1               #>  [75] dplyr_1.1.3                 lattice_0.21-8              #>  [77] survival_3.5-7              rtracklayer_1.60.1          #>  [79] bit_4.0.5                   annotate_1.78.0             #>  [81] tidyselect_1.2.0            locfit_1.5-9.8              #>  [83] Biostrings_2.68.1           miniUI_0.1.1.1              #>  [85] knitr_1.44                  bookdown_0.35               #>  [87] IRanges_2.34.1              edgeR_3.42.4                #>  [89] SummarizedExperiment_1.30.2 stats4_4.3.1                #>  [91] xfun_0.40                   Biobase_2.60.0              #>  [93] brio_1.1.4                  matrixStats_1.0.0           #>  [95] stringi_1.7.12              yaml_2.3.7                  #>  [97] evaluate_0.21               codetools_0.2-19            #>  [99] tibble_3.2.1                BiocManager_1.30.22         #> [101] cli_3.6.1                   xtable_1.8-4                #> [103] systemfonts_1.0.5           munsell_0.5.0               #> [105] jquerylib_0.1.4             Rcpp_1.0.11                 #> [107] GenomeInfoDb_1.36.3         png_0.1-8                   #> [109] XML_3.99-0.14               parallel_4.3.1              #> [111] ellipsis_0.3.2              pkgdown_2.0.7               #> [113] ggplot2_3.4.3               blob_1.2.4                  #> [115] profvis_0.3.8               urlchecker_1.0.1            #> [117] plyranges_1.20.0            bitops_1.0-7                #> [119] scales_1.2.1                purrr_1.0.2                 #> [121] crayon_1.5.2                rlang_1.1.1                 #> [123] KEGGREST_1.40.0"}]
